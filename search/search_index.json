{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Lottie Animation Format","title":"Home"},{"location":"#lottie-animation-format","text":"","title":"Lottie Animation Format"},{"location":"governance/0._CS_Contributor_License_Agreement/","text":"Community Specification Contributor License Agreement 1.0 By making a Contribution to this repository, I agree to the terms of the following documents located at https://github.com/CommunitySpecification/1.0 : (a) Community Specification License 1.0 (0._Community_Specification_License-v1.md) (b) Community Specification Governance Policy 1.0 (5._Governance.md) (c) Community Specification Contribution Policy 1.0 (6._Contributing.md) (d) Community Specification Code of Conduct (8._Code_of_Conduct.md) In addition, for source code contributions, I certify that: (a) The contribution was created in whole or in part by me and I have the right to submit it under the open source license indicated in the file; or (b) The contribution is based upon previous work that, to the best of my knowledge, is covered under an appropriate open source license and I have the right under that license to submit that work with modifications, whether created in whole or in part by me, under the same open source license (unless I am permitted to submit under a different license), as indicated in the file; or (c) The contribution was provided directly to me by some other person who certified (a), (b) or (c) and I have not modified it. (d) I understand and agree that this working group and the contribution may be public and that a record of the contribution (including all personal information I submit with it, including my sign-off) is maintained indefinitely and may be redistributed consistent with this agreement or the open source license(s) involved. I represent that I am legally entitled to make the grants set forth in the documents above. If my employer(s) has rights to intellectual property that may be infringed by the materials developed by this Working Group, I represent that I have received permission to enter these agreements on behalf of that employer.","title":"Community Specification Contributor License Agreement 1.0"},{"location":"governance/0._CS_Contributor_License_Agreement/#community-specification-contributor-license-agreement-10","text":"By making a Contribution to this repository, I agree to the terms of the following documents located at https://github.com/CommunitySpecification/1.0 : (a) Community Specification License 1.0 (0._Community_Specification_License-v1.md) (b) Community Specification Governance Policy 1.0 (5._Governance.md) (c) Community Specification Contribution Policy 1.0 (6._Contributing.md) (d) Community Specification Code of Conduct (8._Code_of_Conduct.md) In addition, for source code contributions, I certify that: (a) The contribution was created in whole or in part by me and I have the right to submit it under the open source license indicated in the file; or (b) The contribution is based upon previous work that, to the best of my knowledge, is covered under an appropriate open source license and I have the right under that license to submit that work with modifications, whether created in whole or in part by me, under the same open source license (unless I am permitted to submit under a different license), as indicated in the file; or (c) The contribution was provided directly to me by some other person who certified (a), (b) or (c) and I have not modified it. (d) I understand and agree that this working group and the contribution may be public and that a record of the contribution (including all personal information I submit with it, including my sign-off) is maintained indefinitely and may be redistributed consistent with this agreement or the open source license(s) involved. I represent that I am legally entitled to make the grants set forth in the documents above. If my employer(s) has rights to intellectual property that may be infringed by the materials developed by this Working Group, I represent that I have received permission to enter these agreements on behalf of that employer.","title":"Community Specification Contributor License Agreement 1.0"},{"location":"governance/1._Community_Specification_License-v1/","text":"Community Specification License 1.0 The Purpose of this License. This License sets forth the terms under which 1) Contributor will participate in and contribute to the development of specifications, standards, best practices, guidelines, and other similar materials under this Working Group, and 2) how the materials developed under this License may be used. It is not intended for source code. Capitalized terms are defined in the License\u2019s last section. 1. Copyright. 1.1. Copyright License. Contributor grants everyone a non-sublicensable, perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as expressly stated in this License) copyright license, without any obligation for accounting, to reproduce, prepare derivative works of, publicly display, publicly perform, and distribute any materials it submits to the full extent of its copyright interest in those materials. Contributor also acknowledges that the Working Group may exercise copyright rights in the Specification, including the rights to submit the Specification to another standards organization. 1.2. Copyright Attribution. As a condition, anyone exercising this copyright license must include attribution to the Working Group in any derivative work based on materials developed by the Working Group. That attribution must include, at minimum, the material\u2019s name, version number, and source from where the materials were retrieved. Attribution is not required for implementations of the Specification. 2. Patents. 2.1. Patent License. 2.1.1. As a Result of Contributions. 2.1.1.1. As a Result of Contributions to Draft Specifications. Contributor grants Licensee a non-sublicensable, perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as expressly stated in this License) license to its Necessary Claims in 1) Contributor\u2019s Contributions and 2) to the Draft Specification that is within Scope as of the date of that Contribution, in both cases for Licensee\u2019s Implementation of the Draft Specification, except for those patent claims excluded by Contributor under Section 3. 2.1.1.2. For Approved Specifications. Contributor grants Licensee a non-sublicensable, perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as expressly stated in this License) license to its Necessary Claims included the Approved Specification that are within Scope for Licensee\u2019s Implementation of the Approved Specification, except for those patent claims excluded by Contributor under Section 3. 2.1.2. Patent Grant from Licensee. Licensee grants each other Licensee a non-sublicensable, perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as expressly stated in this License) license to its Necessary Claims for its Implementation, except for those patent claims excluded under Section 3. 2.1.3. Licensee Acceptance. The patent grants set forth in Section 2.1 extend only to Licensees that have indicated their agreement to this License as follows: 2.1.3.1. Source Code Distributions. For distribution in source code, by including this License in the root directory of the source code with the Implementation; 2.1.3.2. Non-Source Code Distributions. For distribution in any form other than source code, by including this License in the documentation, legal notices, via notice in the software, and/or other written materials provided with the Implementation; or 2.1.3.3. Via Notices.md. By issuing pull request or commit to the Specification\u2019s repository\u2019s Notices.md file by the Implementer\u2019s authorized representative, including the Implementer\u2019s name, authorized individual and system identifier, and Specification version. 2.1.4. Defensive Termination. If any Licensee files or maintains a claim in a court asserting that a Necessary Claim is infringed by an Implementation, any licenses granted under this License to the Licensee are immediately terminated unless 1) that claim is directly in response to a claim against Licensee regarding an Implementation, or 2) that claim was brought to enforce the terms of this License, including intervention in a third-party action by a Licensee. 2.1.5. Additional Conditions. This License is not an assurance (i) that any of Contributor\u2019s copyrights or issued patent claims cover an Implementation of the Specification or are enforceable or (ii) that an Implementation of the Specification would not infringe intellectual property rights of any third party. 2.2. Patent Licensing Commitment. In addition to the rights granted in Section 2.1, Contributor agrees to grant everyone a no charge, royalty-free license on reasonable and non-discriminatory terms to Contributor\u2019s Necessary Claims that are within Scope for: Implementations of a Draft Specification, where such license applies only to those Necessary Claims infringed by implementing Contributor's Contribution(s) included in that Draft Specification, and Implementations of the Approved Specification. This patent licensing commitment does not apply to those claims subject to Contributor\u2019s Exclusion Notice under Section 3. 2.3. Effect of Withdrawal. Contributor may withdraw from the Working Group by issuing a pull request or commit providing notice of withdrawal to the Working Group repository\u2019s Notices.md file. All of Contributor\u2019s existing commitments and obligations with respect to the Working Group up to the date of that withdrawal notice will remain in effect, but no new obligations will be incurred. 2.4. Binding Encumbrance. This License is binding on any future owner, assignee, or party who has been given the right to enforce any Necessary Claims against third parties. 3. Patent Exclusion. 3.1. As a Result of Contributions. Contributor may exclude Necessary Claims from its licensing commitments incurred under Section 2.1.1 by issuing an Exclusion Notice within 45 days of the date of that Contribution. Contributor may not issue an Exclusion Notice for any material that has been included in a Draft Deliverable for more than 45 days prior to the date of that Contribution. 3.2. As a Result of a Draft Specification Becoming an Approved Specification. Prior to the adoption of a Draft Specification as an Approved Specification, Contributor may exclude Necessary Claims from its licensing commitments under this Agreement by issuing an Exclusion Notice. Contributor may not issue an Exclusion Notice for patents that were eligible to have been excluded pursuant to Section 3.1. 4. Source Code License. Any source code developed by the Working Group is solely subject the source code license included in the Working Group\u2019s repository for that code. If no source code license is included, the source code will be subject to the MIT License. 5. No Other Rights. Except as specifically set forth in this License, no other express or implied patent, trademark, copyright, or other rights are granted under this License, including by implication, waiver, or estoppel. 6. Antitrust Compliance. Contributor acknowledge that it may compete with other participants in various lines of business and that it is therefore imperative that they and their respective representatives act in a manner that does not violate any applicable antitrust laws and regulations. This License does not restrict any Contributor from engaging in similar specification development projects. Each Contributor may design, develop, manufacture, acquire or market competitive deliverables, products, and services, and conduct its business, in whatever way it chooses. No Contributor is obligated to announce or market any products or services. Without limiting the generality of the foregoing, the Contributors agree not to have any discussion relating to any product pricing, methods or channels of product distribution, division of markets, allocation of customers or any other topic that should not be discussed among competitors under the auspices of the Working Group. 7. Non-Circumvention. Contributor agrees that it will not intentionally take or willfully assist any third party to take any action for the purpose of circumventing any obligations under this License. 8. Representations, Warranties and Disclaimers. 8.1. Representations, Warranties and Disclaimers. Contributor and Licensee represents and warrants that 1) it is legally entitled to grant the rights set forth in this License and 2) it will not intentionally include any third party materials in any Contribution unless those materials are available under terms that do not conflict with this License. IN ALL OTHER RESPECTS ITS CONTRIBUTIONS ARE PROVIDED \"AS IS.\" The entire risk as to implementing or otherwise using the Contribution or the Specification is assumed by the implementer and user. Except as stated herein, CONTRIBUTOR AND LICENSEE EXPRESSLY DISCLAIM ANY WARRANTIES (EXPRESS, IMPLIED, OR OTHERWISE), INCLUDING IMPLIED WARRANTIES OF MERCHANTABILITY, NON-INFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, CONDITIONS OF QUALITY, OR TITLE, RELATED TO THE CONTRIBUTION OR THE SPECIFICATION. IN NO EVENT WILL ANY PARTY BE LIABLE TO ANY OTHER PARTY FOR LOST PROFITS OR ANY FORM OF INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES OF ANY CHARACTER FROM ANY CAUSES OF ACTION OF ANY KIND WITH RESPECT TO THIS AGREEMENT, WHETHER BASED ON BREACH OF CONTRACT, TORT (INCLUDING NEGLIGENCE), OR OTHERWISE, AND WHETHER OR NOT THE OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. Any obligations regarding the transfer, successors in interest, or assignment of Necessary Claims will be satisfied if Contributor or Licensee notifies the transferee or assignee of any patent that it knows contains Necessary Claims or necessary claims under this License. Nothing in this License requires Contributor to undertake a patent search. If Contributor is 1) employed by or acting on behalf of an employer, 2) is making a Contribution under the direction or control of a third party, or 3) is making the Contribution as a consultant, contractor, or under another similar relationship with a third party, Contributor represents that they have been authorized by that party to enter into this License on its behalf. 8.2. Distribution Disclaimer. Any distributions of technical information to third parties must include a notice materially similar to the following: \u201cTHESE MATERIALS ARE PROVIDED \u201cAS IS.\u201d The Contributors and Licensees expressly disclaim any warranties (express, implied, or otherwise), including implied warranties of merchantability, non-infringement, fitness for a particular purpose, or title, related to the materials. The entire risk as to implementing or otherwise using the materials is assumed by the implementer and user. IN NO EVENT WILL THE CONTRIBUTORS OR LICENSEES BE LIABLE TO ANY OTHER PARTY FOR LOST PROFITS OR ANY FORM OF INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES OF ANY CHARACTER FROM ANY CAUSES OF ACTION OF ANY KIND WITH RESPECT TO THIS DELIVERABLE OR ITS GOVERNING AGREEMENT, WHETHER BASED ON BREACH OF CONTRACT, TORT (INCLUDING NEGLIGENCE), OR OTHERWISE, AND WHETHER OR NOT THE OTHER MEMBER HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u201d 9. Definitions. 9.1. Affiliate. \u201cAffiliate\u201d means an entity that directly or indirectly Controls, is Controlled by, or is under common Control of that party. 9.2. Approved Specification. \u201cApproved Specification\u201d means the final version and contents of any Draft Specification designated as an Approved Specification as set forth in the accompanying Governance.md file. 9.3. Contribution. \u201cContribution\u201d means any original work of authorship, including any modifications or additions to an existing work, that Contributor submits for inclusion in a Draft Specification, which is included in a Draft Specification or Approved Specification. 9.4. Contributor. \u201cContributor\u201d means any person or entity that has indicated its acceptance of the License 1) by making a Contribution to the Specification, or 2) by entering into the Community Specification Contributor License Agreement for the Specification. Contributor includes its Affiliates, assigns, agents, and successors in interest. 9.5. Control. \u201cControl\u201d means direct or indirect control of more than 50% of the voting power to elect directors of that corporation, or for any other entity, the power to direct management of such entity. 9.6. Draft Specification. \u201cDraft Specification\u201d means all versions of the material (except an Approved Specification) developed by this Working Group for the purpose of creating, commenting on, revising, updating, modifying, or adding to any document that is to be considered for inclusion in the Approved Specification. 9.7. Exclusion Notice. \u201cExclusion Notice\u201d means a written notice made by making a pull request or commit to the repository\u2019s Notices.md file that identifies patents that Contributor is excluding from its patent licensing commitments under this License. The Exclusion Notice for issued patents and published applications must include the Draft Specification\u2019s name, patent number(s) or title and application number(s), as the case may be, for each of the issued patent(s) or pending patent application(s) that the Contributor is excluding from the royalty-free licensing commitment set forth in this License. If an issued patent or pending patent application that may contain Necessary Claims is not set forth in the Exclusion Notice, those Necessary Claims shall continue to be subject to the licensing commitments under this License. The Exclusion Notice for unpublished patent applications must provide either: (i) the text of the filed application; or (ii) identification of the specific part(s) of the Draft Specification whose implementation makes the excluded claim a Necessary Claim. If (ii) is chosen, the effect of the exclusion will be limited to the identified part(s) of the Draft Specification. 9.8. Implementation. \u201cImplementation\u201d means making, using, selling, offering for sale, importing or distributing any implementation of the Specification 1) only to the extent it implements the Specification and 2) so long as all required portions of the Specification are implemented. 9.9. License. \u201cLicense\u201d means this Community Specification License. 9.10. Licensee. \u201cLicensee\u201d means any person or entity that has indicated its acceptance of the License as set forth in Section 2.1.3. Licensee includes its Affiliates, assigns, agents, and successors in interest. 9.11. Necessary Claims. \u201cNecessary Claims\u201d are those patent claims, if any, that a party owns or controls, including those claims later acquired, that are necessary to implement the required portions (including the required elements of optional portions) of the Specification that are described in detail and not merely referenced in the Specification. 9.12. Specification. \u201cSpecification\u201d means a Draft Specification or Approved Specification included in the Working Group\u2019s repository subject to this License, and the version of the Specification implemented by the Licensee. 9.13. Scope. \u201cScope\u201d has the meaning as set forth in the accompanying Scope.md file included in this Specification\u2019s repository. Changes to Scope do not apply retroactively. If no Scope is provided, each Contributor\u2019s Necessary Claims are limited to that Contributor\u2019s Contributions. 9.14. Working Group. \u201cWorking Group\u201d means this project to develop specifications, standards, best practices, guidelines, and other similar materials under this License. The text of this Community Specification License is Copyright 2020 Joint Development Foundation and is licensed under the Creative Commons Attribution 4.0 International License available at https://creativecommons.org/licenses/by/4.0/. SPDX-License-Identifier: CC-BY-4.0","title":"Community Specification License 1.0"},{"location":"governance/1._Community_Specification_License-v1/#community-specification-license-10","text":"The Purpose of this License. This License sets forth the terms under which 1) Contributor will participate in and contribute to the development of specifications, standards, best practices, guidelines, and other similar materials under this Working Group, and 2) how the materials developed under this License may be used. It is not intended for source code. Capitalized terms are defined in the License\u2019s last section. 1. Copyright. 1.1. Copyright License. Contributor grants everyone a non-sublicensable, perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as expressly stated in this License) copyright license, without any obligation for accounting, to reproduce, prepare derivative works of, publicly display, publicly perform, and distribute any materials it submits to the full extent of its copyright interest in those materials. Contributor also acknowledges that the Working Group may exercise copyright rights in the Specification, including the rights to submit the Specification to another standards organization. 1.2. Copyright Attribution. As a condition, anyone exercising this copyright license must include attribution to the Working Group in any derivative work based on materials developed by the Working Group. That attribution must include, at minimum, the material\u2019s name, version number, and source from where the materials were retrieved. Attribution is not required for implementations of the Specification. 2. Patents. 2.1. Patent License. 2.1.1. As a Result of Contributions. 2.1.1.1. As a Result of Contributions to Draft Specifications. Contributor grants Licensee a non-sublicensable, perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as expressly stated in this License) license to its Necessary Claims in 1) Contributor\u2019s Contributions and 2) to the Draft Specification that is within Scope as of the date of that Contribution, in both cases for Licensee\u2019s Implementation of the Draft Specification, except for those patent claims excluded by Contributor under Section 3. 2.1.1.2. For Approved Specifications. Contributor grants Licensee a non-sublicensable, perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as expressly stated in this License) license to its Necessary Claims included the Approved Specification that are within Scope for Licensee\u2019s Implementation of the Approved Specification, except for those patent claims excluded by Contributor under Section 3. 2.1.2. Patent Grant from Licensee. Licensee grants each other Licensee a non-sublicensable, perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as expressly stated in this License) license to its Necessary Claims for its Implementation, except for those patent claims excluded under Section 3. 2.1.3. Licensee Acceptance. The patent grants set forth in Section 2.1 extend only to Licensees that have indicated their agreement to this License as follows: 2.1.3.1. Source Code Distributions. For distribution in source code, by including this License in the root directory of the source code with the Implementation; 2.1.3.2. Non-Source Code Distributions. For distribution in any form other than source code, by including this License in the documentation, legal notices, via notice in the software, and/or other written materials provided with the Implementation; or 2.1.3.3. Via Notices.md. By issuing pull request or commit to the Specification\u2019s repository\u2019s Notices.md file by the Implementer\u2019s authorized representative, including the Implementer\u2019s name, authorized individual and system identifier, and Specification version. 2.1.4. Defensive Termination. If any Licensee files or maintains a claim in a court asserting that a Necessary Claim is infringed by an Implementation, any licenses granted under this License to the Licensee are immediately terminated unless 1) that claim is directly in response to a claim against Licensee regarding an Implementation, or 2) that claim was brought to enforce the terms of this License, including intervention in a third-party action by a Licensee. 2.1.5. Additional Conditions. This License is not an assurance (i) that any of Contributor\u2019s copyrights or issued patent claims cover an Implementation of the Specification or are enforceable or (ii) that an Implementation of the Specification would not infringe intellectual property rights of any third party. 2.2. Patent Licensing Commitment. In addition to the rights granted in Section 2.1, Contributor agrees to grant everyone a no charge, royalty-free license on reasonable and non-discriminatory terms to Contributor\u2019s Necessary Claims that are within Scope for: Implementations of a Draft Specification, where such license applies only to those Necessary Claims infringed by implementing Contributor's Contribution(s) included in that Draft Specification, and Implementations of the Approved Specification. This patent licensing commitment does not apply to those claims subject to Contributor\u2019s Exclusion Notice under Section 3. 2.3. Effect of Withdrawal. Contributor may withdraw from the Working Group by issuing a pull request or commit providing notice of withdrawal to the Working Group repository\u2019s Notices.md file. All of Contributor\u2019s existing commitments and obligations with respect to the Working Group up to the date of that withdrawal notice will remain in effect, but no new obligations will be incurred. 2.4. Binding Encumbrance. This License is binding on any future owner, assignee, or party who has been given the right to enforce any Necessary Claims against third parties. 3. Patent Exclusion. 3.1. As a Result of Contributions. Contributor may exclude Necessary Claims from its licensing commitments incurred under Section 2.1.1 by issuing an Exclusion Notice within 45 days of the date of that Contribution. Contributor may not issue an Exclusion Notice for any material that has been included in a Draft Deliverable for more than 45 days prior to the date of that Contribution. 3.2. As a Result of a Draft Specification Becoming an Approved Specification. Prior to the adoption of a Draft Specification as an Approved Specification, Contributor may exclude Necessary Claims from its licensing commitments under this Agreement by issuing an Exclusion Notice. Contributor may not issue an Exclusion Notice for patents that were eligible to have been excluded pursuant to Section 3.1. 4. Source Code License. Any source code developed by the Working Group is solely subject the source code license included in the Working Group\u2019s repository for that code. If no source code license is included, the source code will be subject to the MIT License. 5. No Other Rights. Except as specifically set forth in this License, no other express or implied patent, trademark, copyright, or other rights are granted under this License, including by implication, waiver, or estoppel. 6. Antitrust Compliance. Contributor acknowledge that it may compete with other participants in various lines of business and that it is therefore imperative that they and their respective representatives act in a manner that does not violate any applicable antitrust laws and regulations. This License does not restrict any Contributor from engaging in similar specification development projects. Each Contributor may design, develop, manufacture, acquire or market competitive deliverables, products, and services, and conduct its business, in whatever way it chooses. No Contributor is obligated to announce or market any products or services. Without limiting the generality of the foregoing, the Contributors agree not to have any discussion relating to any product pricing, methods or channels of product distribution, division of markets, allocation of customers or any other topic that should not be discussed among competitors under the auspices of the Working Group. 7. Non-Circumvention. Contributor agrees that it will not intentionally take or willfully assist any third party to take any action for the purpose of circumventing any obligations under this License. 8. Representations, Warranties and Disclaimers. 8.1. Representations, Warranties and Disclaimers. Contributor and Licensee represents and warrants that 1) it is legally entitled to grant the rights set forth in this License and 2) it will not intentionally include any third party materials in any Contribution unless those materials are available under terms that do not conflict with this License. IN ALL OTHER RESPECTS ITS CONTRIBUTIONS ARE PROVIDED \"AS IS.\" The entire risk as to implementing or otherwise using the Contribution or the Specification is assumed by the implementer and user. Except as stated herein, CONTRIBUTOR AND LICENSEE EXPRESSLY DISCLAIM ANY WARRANTIES (EXPRESS, IMPLIED, OR OTHERWISE), INCLUDING IMPLIED WARRANTIES OF MERCHANTABILITY, NON-INFRINGEMENT, FITNESS FOR A PARTICULAR PURPOSE, CONDITIONS OF QUALITY, OR TITLE, RELATED TO THE CONTRIBUTION OR THE SPECIFICATION. IN NO EVENT WILL ANY PARTY BE LIABLE TO ANY OTHER PARTY FOR LOST PROFITS OR ANY FORM OF INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES OF ANY CHARACTER FROM ANY CAUSES OF ACTION OF ANY KIND WITH RESPECT TO THIS AGREEMENT, WHETHER BASED ON BREACH OF CONTRACT, TORT (INCLUDING NEGLIGENCE), OR OTHERWISE, AND WHETHER OR NOT THE OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. Any obligations regarding the transfer, successors in interest, or assignment of Necessary Claims will be satisfied if Contributor or Licensee notifies the transferee or assignee of any patent that it knows contains Necessary Claims or necessary claims under this License. Nothing in this License requires Contributor to undertake a patent search. If Contributor is 1) employed by or acting on behalf of an employer, 2) is making a Contribution under the direction or control of a third party, or 3) is making the Contribution as a consultant, contractor, or under another similar relationship with a third party, Contributor represents that they have been authorized by that party to enter into this License on its behalf. 8.2. Distribution Disclaimer. Any distributions of technical information to third parties must include a notice materially similar to the following: \u201cTHESE MATERIALS ARE PROVIDED \u201cAS IS.\u201d The Contributors and Licensees expressly disclaim any warranties (express, implied, or otherwise), including implied warranties of merchantability, non-infringement, fitness for a particular purpose, or title, related to the materials. The entire risk as to implementing or otherwise using the materials is assumed by the implementer and user. IN NO EVENT WILL THE CONTRIBUTORS OR LICENSEES BE LIABLE TO ANY OTHER PARTY FOR LOST PROFITS OR ANY FORM OF INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES OF ANY CHARACTER FROM ANY CAUSES OF ACTION OF ANY KIND WITH RESPECT TO THIS DELIVERABLE OR ITS GOVERNING AGREEMENT, WHETHER BASED ON BREACH OF CONTRACT, TORT (INCLUDING NEGLIGENCE), OR OTHERWISE, AND WHETHER OR NOT THE OTHER MEMBER HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\u201d 9. Definitions. 9.1. Affiliate. \u201cAffiliate\u201d means an entity that directly or indirectly Controls, is Controlled by, or is under common Control of that party. 9.2. Approved Specification. \u201cApproved Specification\u201d means the final version and contents of any Draft Specification designated as an Approved Specification as set forth in the accompanying Governance.md file. 9.3. Contribution. \u201cContribution\u201d means any original work of authorship, including any modifications or additions to an existing work, that Contributor submits for inclusion in a Draft Specification, which is included in a Draft Specification or Approved Specification. 9.4. Contributor. \u201cContributor\u201d means any person or entity that has indicated its acceptance of the License 1) by making a Contribution to the Specification, or 2) by entering into the Community Specification Contributor License Agreement for the Specification. Contributor includes its Affiliates, assigns, agents, and successors in interest. 9.5. Control. \u201cControl\u201d means direct or indirect control of more than 50% of the voting power to elect directors of that corporation, or for any other entity, the power to direct management of such entity. 9.6. Draft Specification. \u201cDraft Specification\u201d means all versions of the material (except an Approved Specification) developed by this Working Group for the purpose of creating, commenting on, revising, updating, modifying, or adding to any document that is to be considered for inclusion in the Approved Specification. 9.7. Exclusion Notice. \u201cExclusion Notice\u201d means a written notice made by making a pull request or commit to the repository\u2019s Notices.md file that identifies patents that Contributor is excluding from its patent licensing commitments under this License. The Exclusion Notice for issued patents and published applications must include the Draft Specification\u2019s name, patent number(s) or title and application number(s), as the case may be, for each of the issued patent(s) or pending patent application(s) that the Contributor is excluding from the royalty-free licensing commitment set forth in this License. If an issued patent or pending patent application that may contain Necessary Claims is not set forth in the Exclusion Notice, those Necessary Claims shall continue to be subject to the licensing commitments under this License. The Exclusion Notice for unpublished patent applications must provide either: (i) the text of the filed application; or (ii) identification of the specific part(s) of the Draft Specification whose implementation makes the excluded claim a Necessary Claim. If (ii) is chosen, the effect of the exclusion will be limited to the identified part(s) of the Draft Specification. 9.8. Implementation. \u201cImplementation\u201d means making, using, selling, offering for sale, importing or distributing any implementation of the Specification 1) only to the extent it implements the Specification and 2) so long as all required portions of the Specification are implemented. 9.9. License. \u201cLicense\u201d means this Community Specification License. 9.10. Licensee. \u201cLicensee\u201d means any person or entity that has indicated its acceptance of the License as set forth in Section 2.1.3. Licensee includes its Affiliates, assigns, agents, and successors in interest. 9.11. Necessary Claims. \u201cNecessary Claims\u201d are those patent claims, if any, that a party owns or controls, including those claims later acquired, that are necessary to implement the required portions (including the required elements of optional portions) of the Specification that are described in detail and not merely referenced in the Specification. 9.12. Specification. \u201cSpecification\u201d means a Draft Specification or Approved Specification included in the Working Group\u2019s repository subject to this License, and the version of the Specification implemented by the Licensee. 9.13. Scope. \u201cScope\u201d has the meaning as set forth in the accompanying Scope.md file included in this Specification\u2019s repository. Changes to Scope do not apply retroactively. If no Scope is provided, each Contributor\u2019s Necessary Claims are limited to that Contributor\u2019s Contributions. 9.14. Working Group. \u201cWorking Group\u201d means this project to develop specifications, standards, best practices, guidelines, and other similar materials under this License. The text of this Community Specification License is Copyright 2020 Joint Development Foundation and is licensed under the Creative Commons Attribution 4.0 International License available at https://creativecommons.org/licenses/by/4.0/. SPDX-License-Identifier: CC-BY-4.0","title":"Community Specification License 1.0"},{"location":"governance/2._Scope/","text":"Scope The scope of this Working Group is to specify the format of the Lottie Animation Format, both the allowed JSON structure, the semantics of that structure, and how such Lottie files are to be rendered. The definition of the correct rendering will be specified by a combination of verbiage in the written specification and by exemplar Lottie files and their desired renderings committed to the tests repo.","title":"Scope"},{"location":"governance/2._Scope/#scope","text":"The scope of this Working Group is to specify the format of the Lottie Animation Format, both the allowed JSON structure, the semantics of that structure, and how such Lottie files are to be rendered. The definition of the correct rendering will be specified by a combination of verbiage in the written specification and by exemplar Lottie files and their desired renderings committed to the tests repo.","title":"Scope"},{"location":"governance/3._Notices/","text":"Notices Code of Conduct Contact for Code of Conduct issues or inquires: jcgregorio@google.com / hcm@google.com License Acceptance Per Community Specification License 1.0 Section 2.1.3.3, Licensees may indicate their acceptance of the Community Specification License by issuing a pull request to the Specification\u2019s repository\u2019s Notice.md file, including the Licensee\u2019s name, authorized individuals' names, and repository system identifier (e.g. GitHub ID), and specification version. A Licensee may consent to accepting the current Community Specification License version or any future version of the Community Specification License by indicating \"or later\" after their specification version. Licensee\u2019s name: Authorized individual and system identifier: Specification version: Withdrawals Name of party withdrawing: Date of withdrawal: Exclusions This section includes any Exclusion Notices made against a Draft Deliverable or Approved Deliverable as set forth in the Community Specification Development License. Each Exclusion Notice must include the following information: Name of party making the Exclusion Notice: Name of patent owner: Specification: Version number: For issued patents and published patent applications: (i) patent number(s) or title and application number(s), as the case may be: (ii) identification of the specific part(s) of the Specification whose implementation makes the excluded claim a Necessary Claim. For unpublished patent applications must provide either: (i) the text of the filed application; or (ii) identification of the specific part(s) of the Specification whose implementation makes the excluded claim a Necessary Claim.","title":"Notices"},{"location":"governance/3._Notices/#notices","text":"","title":"Notices"},{"location":"governance/3._Notices/#code-of-conduct","text":"Contact for Code of Conduct issues or inquires: jcgregorio@google.com / hcm@google.com","title":"Code of Conduct"},{"location":"governance/3._Notices/#license-acceptance","text":"Per Community Specification License 1.0 Section 2.1.3.3, Licensees may indicate their acceptance of the Community Specification License by issuing a pull request to the Specification\u2019s repository\u2019s Notice.md file, including the Licensee\u2019s name, authorized individuals' names, and repository system identifier (e.g. GitHub ID), and specification version. A Licensee may consent to accepting the current Community Specification License version or any future version of the Community Specification License by indicating \"or later\" after their specification version. Licensee\u2019s name: Authorized individual and system identifier: Specification version:","title":"License Acceptance"},{"location":"governance/3._Notices/#withdrawals","text":"Name of party withdrawing: Date of withdrawal:","title":"Withdrawals"},{"location":"governance/3._Notices/#exclusions","text":"This section includes any Exclusion Notices made against a Draft Deliverable or Approved Deliverable as set forth in the Community Specification Development License. Each Exclusion Notice must include the following information: Name of party making the Exclusion Notice: Name of patent owner: Specification: Version number: For issued patents and published patent applications: (i) patent number(s) or title and application number(s), as the case may be: (ii) identification of the specific part(s) of the Specification whose implementation makes the excluded claim a Necessary Claim. For unpublished patent applications must provide either: (i) the text of the filed application; or (ii) identification of the specific part(s) of the Specification whose implementation makes the excluded claim a Necessary Claim.","title":"Exclusions"},{"location":"governance/4._License/","text":"Licenses Specification License Specifications in the repository are subject to the Community Specification License 1.0 available at https://github.com/CommunitySpecification/1.0 . Source Code License If source code is included in this repository, or for sample or reference code included in the specification itself, that code is subject to the MIT license unless otherwise designated. In the case of any conflict or confusion within this specification repository between the Community Specification License and the MIT or other designated license, the terms of the Community Specification License shall apply. If source code is included in this repository, or for sample or reference code included in the specification itself, that code is subject to the MIT license unless otherwise marked. In the case of any conflict or confusion within this specification repository between the Community Specification License and the designated source code license, the terms of the Community Specification License shall apply.","title":"Licenses"},{"location":"governance/4._License/#licenses","text":"","title":"Licenses"},{"location":"governance/4._License/#specification-license","text":"Specifications in the repository are subject to the Community Specification License 1.0 available at https://github.com/CommunitySpecification/1.0 .","title":"Specification License"},{"location":"governance/4._License/#source-code-license","text":"If source code is included in this repository, or for sample or reference code included in the specification itself, that code is subject to the MIT license unless otherwise designated. In the case of any conflict or confusion within this specification repository between the Community Specification License and the MIT or other designated license, the terms of the Community Specification License shall apply. If source code is included in this repository, or for sample or reference code included in the specification itself, that code is subject to the MIT license unless otherwise marked. In the case of any conflict or confusion within this specification repository between the Community Specification License and the designated source code license, the terms of the Community Specification License shall apply.","title":"Source Code License"},{"location":"governance/5._Governance/","text":"Community Specification Governance Policy 1.0 This document provides the governance policy for specifications and other documents developed using the Community Specification process in a repository (each a \u201cWorking Group\u201d). Each Working Group and must adhere to the requirements in this document. 1. Roles. Each Working Group may include the following roles. Additional roles may be adopted and documented by the Working Group. 1.1. Maintainer. \u201cMaintainers\u201d are responsible for organizing activities around developing, maintaining, and updating the specification(s) developed by the Working Group. Maintainers are also responsible for determining consensus and coordinating appeals. Each Working Group will designate one or more Maintainer for that Working Group. A Working Group may select a new or additional Maintainer(s) upon Approval of the Working Group Participants. 1.2. Editor. \u201cEditors\u201d are responsible for ensuring that the contents of the document accurately reflect the decisions that have been made by the group, and that the specification adheres to formatting and content guidelines. Each Working Group will designate an Editor for that Working Group. A Working Group may select a new Editor upon Approval of the Working Group Participants. 1.3. Participants. \u201cParticipants\u201d are those that have made Contributions to the Working Group subject to the Community Specification License. 2. Decision Making. 2.1. Consensus-Based Decision Making. Working Groups make decisions through a consensus process (\u201cApproval\u201d or \u201cApproved\u201d). While the agreement of all Participants is preferred, it is not required for consensus. Rather, the Maintainer will determine consensus based on their good faith consideration of a number of factors, including the dominant view of the Working Group Participants and nature of support and objections. The Maintainer will document evidence of consensus in accordance with these requirements. 2.2. Appeal Process. Decisions may be appealed be via a pull request or an issue, and that appeal will be considered by the Maintainer in good faith, who will respond in writing within a reasonable time. 3. Ways of Working. Inspired by ANSI\u2019s Essential Requirements for Due Process , Community Specification Working Groups must adhere to consensus-based due process requirements. These requirements apply to activities related to the development of consensus for approval, revision, reaffirmation, and withdrawal of Community Specifications. Due process means that any person (organization, company, government agency, individual, etc.) with a direct and material interest has a right to participate by: a) expressing a position and its basis, b) having that position considered, and c) having the right to appeal. Due process allows for equity and fair play. The following constitute the minimum acceptable due process requirements for the development of consensus. 3.1. Openness. Participation shall be open to all persons who are directly and materially affected by the activity in question. There shall be no undue financial barriers to participation. Voting membership on the consensus body shall not be conditional upon membership in any organization, nor unreasonably restricted on the basis of technical qualifications or other such requirements. Membership in a Working Group\u2019s parent organization, if any, may be required. 3.2. Lack of Dominance. The development process shall not be dominated by any single interest category, individual or organization. Dominance means a position or exercise of dominant authority, leadership, or influence by reason of superior leverage, strength, or representation to the exclusion of fair and equitable consideration of other viewpoints. 3.3. Balance. The development process should have a balance of interests. Participants from diverse interest categories shall be sought with the objective of achieving balance. 3.4. Coordination and Harmonization. Good faith efforts shall be made to resolve potential conflicts between and among deliverables developed under this Working Group and existing industry standards. 3.5. Consideration of Views and Objections. Prompt consideration shall be given to the written views and objections of all Participants. 3.6. Written procedures. This governance document and other materials documenting the Community Specification development process shall be available to any interested person. 4. Specification Development Process. 4.1. Pre-Draft. Any Participant may submit a proposed initial draft document as a candidate Draft Specification of that Working Group. The Maintainer will designate each submission as a \u201cPre-Draft\u201d document. 4.2. Draft. Each Pre-Draft document of a Working Group must first be Approved to become a\u201d Draft Specification\u201d. Once the Working Group approves a document as a Draft Specification, the Draft Specification becomes the basis for all going forward work on that specification. 4.3. Working Group Approval. Once a Working Group believes it has achieved the objectives for its specification as described in the Scope, it will Approve that Draft Specification and progress it to \u201cApproved Specification\u201d status. 4.4. Publication and Submission. Upon the designation of a Draft Specification as an Approved Specification, the Maintainer will publish the Approved Specification in a manner agreed upon by the Working Group Participants (i.e., Working Group Participant only location, publicly available location, Working Group maintained website, Working Group member website, etc.). The publication of an Approved Specification in a publicly accessible manner must include the terms under which the Approved Specification is being made available under. 4.5. Submissions to Standards Bodies. No Draft Specification or Approved Specification may be submitted to another standards development organization without Working group Approval. Upon reaching Approval, the Maintainer will coordinate the submission of the applicable Draft Specification or Approved Specification to another standards development organization. Working Group Participants that developed that Draft Specification or Approved Specification agree to grant the copyright rights necessary to make those submissions. 5. Non-Confidential, Restricted Disclosure. Information disclosed in connection with any Working Group activity, including but not limited to meetings, Contributions, and submissions, is not confidential, regardless of any markings or statements to the contrary. Notwithstanding the foregoing, if the Working Group is collaborating via a private repository, the Participants will not make any public disclosures of that information contained in that private repository without the Approval of the Working Group.","title":"Community Specification Governance Policy 1.0"},{"location":"governance/5._Governance/#community-specification-governance-policy-10","text":"This document provides the governance policy for specifications and other documents developed using the Community Specification process in a repository (each a \u201cWorking Group\u201d). Each Working Group and must adhere to the requirements in this document.","title":"Community Specification Governance Policy 1.0"},{"location":"governance/5._Governance/#1-roles","text":"Each Working Group may include the following roles. Additional roles may be adopted and documented by the Working Group. 1.1. Maintainer. \u201cMaintainers\u201d are responsible for organizing activities around developing, maintaining, and updating the specification(s) developed by the Working Group. Maintainers are also responsible for determining consensus and coordinating appeals. Each Working Group will designate one or more Maintainer for that Working Group. A Working Group may select a new or additional Maintainer(s) upon Approval of the Working Group Participants. 1.2. Editor. \u201cEditors\u201d are responsible for ensuring that the contents of the document accurately reflect the decisions that have been made by the group, and that the specification adheres to formatting and content guidelines. Each Working Group will designate an Editor for that Working Group. A Working Group may select a new Editor upon Approval of the Working Group Participants. 1.3. Participants. \u201cParticipants\u201d are those that have made Contributions to the Working Group subject to the Community Specification License.","title":"1. Roles."},{"location":"governance/5._Governance/#2-decision-making","text":"2.1. Consensus-Based Decision Making. Working Groups make decisions through a consensus process (\u201cApproval\u201d or \u201cApproved\u201d). While the agreement of all Participants is preferred, it is not required for consensus. Rather, the Maintainer will determine consensus based on their good faith consideration of a number of factors, including the dominant view of the Working Group Participants and nature of support and objections. The Maintainer will document evidence of consensus in accordance with these requirements. 2.2. Appeal Process. Decisions may be appealed be via a pull request or an issue, and that appeal will be considered by the Maintainer in good faith, who will respond in writing within a reasonable time.","title":"2. Decision Making."},{"location":"governance/5._Governance/#3-ways-of-working","text":"Inspired by ANSI\u2019s Essential Requirements for Due Process , Community Specification Working Groups must adhere to consensus-based due process requirements. These requirements apply to activities related to the development of consensus for approval, revision, reaffirmation, and withdrawal of Community Specifications. Due process means that any person (organization, company, government agency, individual, etc.) with a direct and material interest has a right to participate by: a) expressing a position and its basis, b) having that position considered, and c) having the right to appeal. Due process allows for equity and fair play. The following constitute the minimum acceptable due process requirements for the development of consensus. 3.1. Openness. Participation shall be open to all persons who are directly and materially affected by the activity in question. There shall be no undue financial barriers to participation. Voting membership on the consensus body shall not be conditional upon membership in any organization, nor unreasonably restricted on the basis of technical qualifications or other such requirements. Membership in a Working Group\u2019s parent organization, if any, may be required. 3.2. Lack of Dominance. The development process shall not be dominated by any single interest category, individual or organization. Dominance means a position or exercise of dominant authority, leadership, or influence by reason of superior leverage, strength, or representation to the exclusion of fair and equitable consideration of other viewpoints. 3.3. Balance. The development process should have a balance of interests. Participants from diverse interest categories shall be sought with the objective of achieving balance. 3.4. Coordination and Harmonization. Good faith efforts shall be made to resolve potential conflicts between and among deliverables developed under this Working Group and existing industry standards. 3.5. Consideration of Views and Objections. Prompt consideration shall be given to the written views and objections of all Participants. 3.6. Written procedures. This governance document and other materials documenting the Community Specification development process shall be available to any interested person.","title":"3. Ways of Working."},{"location":"governance/5._Governance/#4-specification-development-process","text":"4.1. Pre-Draft. Any Participant may submit a proposed initial draft document as a candidate Draft Specification of that Working Group. The Maintainer will designate each submission as a \u201cPre-Draft\u201d document. 4.2. Draft. Each Pre-Draft document of a Working Group must first be Approved to become a\u201d Draft Specification\u201d. Once the Working Group approves a document as a Draft Specification, the Draft Specification becomes the basis for all going forward work on that specification. 4.3. Working Group Approval. Once a Working Group believes it has achieved the objectives for its specification as described in the Scope, it will Approve that Draft Specification and progress it to \u201cApproved Specification\u201d status. 4.4. Publication and Submission. Upon the designation of a Draft Specification as an Approved Specification, the Maintainer will publish the Approved Specification in a manner agreed upon by the Working Group Participants (i.e., Working Group Participant only location, publicly available location, Working Group maintained website, Working Group member website, etc.). The publication of an Approved Specification in a publicly accessible manner must include the terms under which the Approved Specification is being made available under. 4.5. Submissions to Standards Bodies. No Draft Specification or Approved Specification may be submitted to another standards development organization without Working group Approval. Upon reaching Approval, the Maintainer will coordinate the submission of the applicable Draft Specification or Approved Specification to another standards development organization. Working Group Participants that developed that Draft Specification or Approved Specification agree to grant the copyright rights necessary to make those submissions.","title":"4. Specification Development Process."},{"location":"governance/5._Governance/#5-non-confidential-restricted-disclosure","text":"Information disclosed in connection with any Working Group activity, including but not limited to meetings, Contributions, and submissions, is not confidential, regardless of any markings or statements to the contrary. Notwithstanding the foregoing, if the Working Group is collaborating via a private repository, the Participants will not make any public disclosures of that information contained in that private repository without the Approval of the Working Group.","title":"5. Non-Confidential, Restricted Disclosure."},{"location":"governance/6._Contributing/","text":"Community Specification Contribution Policy 1.0 This document provides the contribution policy for specifications and other documents developed using the Community Specification process in a repository (each a \u201cWorking Group\u201d). Additional or alternate contribution policies may be adopted and documented by the Working Group. 1. Contribution Guidelines. This Working Group accepts contributions via pull requests. The following section outlines the process for merging contributions to the specification 1.1. Issues. Issues are used as the primary method for tracking anything to do with this specification Working Group. 1.1.1. Issue Types. There are three types of issues (each with their own corresponding label): 1.1.1.1. Discussion. These are support or functionality inquiries that we want to have a record of for future reference. Depending on the discussion, these can turn into \"Spec Change\" issues. 1.1.1.2. Proposal. Used for items that propose a new ideas or functionality that require a larger discussion. This allows for feedback from others before a specification change is actually written. All issues that are proposals should both have a label and an issue title of \"Proposal: [the rest of the title].\" A proposal can become a \"Spec Change\" and does not require a milestone. 1.1.1.3. Spec Change: These track specific spec changes and ideas until they are complete. They can evolve from \"Proposal\" and \"Discussion\" items, or can be submitted individually depending on the size. Each spec change should be placed into a milestone. 2. Issue Lifecycle. The issue lifecycle is mainly driven by the Maintainer. All issue types follow the same general lifecycle. Differences are noted below. 2.1. Issue Creation. 2.2. Triage. o The Editor in charge of triaging will apply the proper labels for the issue. This includes labels for priority, type, and metadata. o (If needed) Clean up the title to succinctly and clearly state the issue. Also ensure that proposals are prefaced with \"Proposal\". 2.3. Discussion. o \"Spec Change\" issues should be connected to the pull request that resolves it. o Whoever is working on a \"Spec Change\" issue should either assign the issue to themselves or make a comment in the issue saying that they are taking it. o \"Proposal\" and \"Discussion\" issues should stay open until resolved. 2.4. Issue Closure. 3. How to Contribute a Patch. The Working Group uses pull requests to track changes. To submit a change to the specification: 3.1 Fork the Repo, modify the Specification to Address the Issue. 3.2. Submit a Pull Request. 4. Pull Request Workflow. The next section contains more information on the workflow followed for Pull Requests. 4.1. Pull Request Creation. o We welcome pull requests that are currently in progress. They are a great way to keep track of important work that is in-flight, but useful for others to see. If a pull request is a work in progress, it should be prefaced with \"WIP: [title]\". You should also add the wip label Once the pull request is ready for review, remove \"WIP\" from the title and label. o It is preferred, but not required, to have a pull request tied to a specific issue. There can be circumstances where if it is a quick fix then an issue might be overkill. The details provided in the pull request description would suffice in this case. 4.2. Triage o The Editor in charge of triaging will apply the proper labels for the issue. This should include at least a size label, a milestone, and awaiting review once all labels are applied. 4.3. Reviewing/Discussion. o All reviews will be completed using the review tool. o A \"Comment\" review should be used when there are questions about the spec that should be answered, but that don't involve spec changes. This type of review does not count as approval. o A \"Changes Requested\" review indicates that changes to the spec need to be made before they will be merged. o Reviewers should update labels as needed (such as needs rebase). o When a review is approved, the reviewer should add LGTM as a comment. o Final approval is required by a designated Editor. Merging is blocked without this final approval. Editors will factor reviews from all other reviewers into their approval process. 4.4. Responsive. Pull request owner should try to be responsive to comments by answering questions or changing text. Once all comments have been addressed, the pull request is ready to be merged. 4.5. Merge or Close. o A pull request should stay open until a Maintainer has marked the pull request as approved. o Pull requests can be closed by the author without merging. o Pull requests may be closed by a Maintainer if the decision is made that it is not going to be merged.","title":"Community Specification Contribution Policy 1.0"},{"location":"governance/6._Contributing/#community-specification-contribution-policy-10","text":"This document provides the contribution policy for specifications and other documents developed using the Community Specification process in a repository (each a \u201cWorking Group\u201d). Additional or alternate contribution policies may be adopted and documented by the Working Group.","title":"Community Specification Contribution Policy 1.0"},{"location":"governance/6._Contributing/#1-contribution-guidelines","text":"This Working Group accepts contributions via pull requests. The following section outlines the process for merging contributions to the specification 1.1. Issues. Issues are used as the primary method for tracking anything to do with this specification Working Group. 1.1.1. Issue Types. There are three types of issues (each with their own corresponding label): 1.1.1.1. Discussion. These are support or functionality inquiries that we want to have a record of for future reference. Depending on the discussion, these can turn into \"Spec Change\" issues. 1.1.1.2. Proposal. Used for items that propose a new ideas or functionality that require a larger discussion. This allows for feedback from others before a specification change is actually written. All issues that are proposals should both have a label and an issue title of \"Proposal: [the rest of the title].\" A proposal can become a \"Spec Change\" and does not require a milestone. 1.1.1.3. Spec Change: These track specific spec changes and ideas until they are complete. They can evolve from \"Proposal\" and \"Discussion\" items, or can be submitted individually depending on the size. Each spec change should be placed into a milestone.","title":"1. Contribution Guidelines."},{"location":"governance/6._Contributing/#2-issue-lifecycle","text":"The issue lifecycle is mainly driven by the Maintainer. All issue types follow the same general lifecycle. Differences are noted below. 2.1. Issue Creation. 2.2. Triage. o The Editor in charge of triaging will apply the proper labels for the issue. This includes labels for priority, type, and metadata. o (If needed) Clean up the title to succinctly and clearly state the issue. Also ensure that proposals are prefaced with \"Proposal\". 2.3. Discussion. o \"Spec Change\" issues should be connected to the pull request that resolves it. o Whoever is working on a \"Spec Change\" issue should either assign the issue to themselves or make a comment in the issue saying that they are taking it. o \"Proposal\" and \"Discussion\" issues should stay open until resolved. 2.4. Issue Closure.","title":"2. Issue Lifecycle."},{"location":"governance/6._Contributing/#3-how-to-contribute-a-patch","text":"The Working Group uses pull requests to track changes. To submit a change to the specification: 3.1 Fork the Repo, modify the Specification to Address the Issue. 3.2. Submit a Pull Request.","title":"3. How to Contribute a Patch."},{"location":"governance/6._Contributing/#4-pull-request-workflow","text":"The next section contains more information on the workflow followed for Pull Requests. 4.1. Pull Request Creation. o We welcome pull requests that are currently in progress. They are a great way to keep track of important work that is in-flight, but useful for others to see. If a pull request is a work in progress, it should be prefaced with \"WIP: [title]\". You should also add the wip label Once the pull request is ready for review, remove \"WIP\" from the title and label. o It is preferred, but not required, to have a pull request tied to a specific issue. There can be circumstances where if it is a quick fix then an issue might be overkill. The details provided in the pull request description would suffice in this case. 4.2. Triage o The Editor in charge of triaging will apply the proper labels for the issue. This should include at least a size label, a milestone, and awaiting review once all labels are applied. 4.3. Reviewing/Discussion. o All reviews will be completed using the review tool. o A \"Comment\" review should be used when there are questions about the spec that should be answered, but that don't involve spec changes. This type of review does not count as approval. o A \"Changes Requested\" review indicates that changes to the spec need to be made before they will be merged. o Reviewers should update labels as needed (such as needs rebase). o When a review is approved, the reviewer should add LGTM as a comment. o Final approval is required by a designated Editor. Merging is blocked without this final approval. Editors will factor reviews from all other reviewers into their approval process. 4.4. Responsive. Pull request owner should try to be responsive to comments by answering questions or changing text. Once all comments have been addressed, the pull request is ready to be merged. 4.5. Merge or Close. o A pull request should stay open until a Maintainer has marked the pull request as approved. o Pull requests can be closed by the author without merging. o Pull requests may be closed by a Maintainer if the decision is made that it is not going to be merged.","title":"4. Pull Request Workflow."},{"location":"governance/8._Code_of_Conduct/","text":"Contributor Covenant Code of Conduct Our Pledge We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation. We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community. Our Standards Examples of behavior that contributes to a positive environment for our community include: Demonstrating empathy and kindness toward other people Being respectful of differing opinions, viewpoints, and experiences Giving and gracefully accepting constructive feedback Accepting responsibility and apologizing to those affected by our mistakes, and learning from the experience Focusing on what is best not just for us as individuals, but for the overall community Examples of unacceptable behavior include: The use of sexualized language or imagery, and sexual attention or advances of any kind Trolling, insulting or derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or email address, without their explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting Enforcement Responsibilities Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful. Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate. Scope This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Enforcement Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement as set forth in the repository's Notice.md file. All complaints will be reviewed and investigated promptly and fairly. All community leaders are obligated to respect the privacy and security of the reporter of any incident. Enforcement Guidelines Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct: 1. Correction Community Impact : Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community. Consequence : A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested. 2. Warning Community Impact : A violation through a single incident or series of actions. Consequence : A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban. 3. Temporary Ban Community Impact : A serious violation of community standards, including sustained inappropriate behavior. Consequence : A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban. 4. Permanent Ban Community Impact : Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals. Consequence : A permanent ban from any sort of public interaction within the project community. Attribution This Code of Conduct is adapted from the Contributor Covenant , version 2.0, available at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder . For answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.","title":"Contributor Covenant Code of Conduct"},{"location":"governance/8._Code_of_Conduct/#contributor-covenant-code-of-conduct","text":"","title":"Contributor Covenant Code of Conduct"},{"location":"governance/8._Code_of_Conduct/#our-pledge","text":"We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation. We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.","title":"Our Pledge"},{"location":"governance/8._Code_of_Conduct/#our-standards","text":"Examples of behavior that contributes to a positive environment for our community include: Demonstrating empathy and kindness toward other people Being respectful of differing opinions, viewpoints, and experiences Giving and gracefully accepting constructive feedback Accepting responsibility and apologizing to those affected by our mistakes, and learning from the experience Focusing on what is best not just for us as individuals, but for the overall community Examples of unacceptable behavior include: The use of sexualized language or imagery, and sexual attention or advances of any kind Trolling, insulting or derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or email address, without their explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting","title":"Our Standards"},{"location":"governance/8._Code_of_Conduct/#enforcement-responsibilities","text":"Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful. Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.","title":"Enforcement Responsibilities"},{"location":"governance/8._Code_of_Conduct/#scope","text":"This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.","title":"Scope"},{"location":"governance/8._Code_of_Conduct/#enforcement","text":"Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement as set forth in the repository's Notice.md file. All complaints will be reviewed and investigated promptly and fairly. All community leaders are obligated to respect the privacy and security of the reporter of any incident.","title":"Enforcement"},{"location":"governance/8._Code_of_Conduct/#enforcement-guidelines","text":"Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:","title":"Enforcement Guidelines"},{"location":"governance/8._Code_of_Conduct/#1-correction","text":"Community Impact : Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community. Consequence : A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.","title":"1. Correction"},{"location":"governance/8._Code_of_Conduct/#2-warning","text":"Community Impact : A violation through a single incident or series of actions. Consequence : A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.","title":"2. Warning"},{"location":"governance/8._Code_of_Conduct/#3-temporary-ban","text":"Community Impact : A serious violation of community standards, including sustained inappropriate behavior. Consequence : A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.","title":"3. Temporary Ban"},{"location":"governance/8._Code_of_Conduct/#4-permanent-ban","text":"Community Impact : Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals. Consequence : A permanent ban from any sort of public interaction within the project community.","title":"4. Permanent Ban"},{"location":"governance/8._Code_of_Conduct/#attribution","text":"This Code of Conduct is adapted from the Contributor Covenant , version 2.0, available at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder . For answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.","title":"Attribution"},{"location":"governance/FAQ/","text":"FAQ Scope Q: Does the specification cover an API for manipulating Lottie Animation playback, such as setting the refresh rate? A: Not at this time. Q: Does the specification cover an API for changing a Lottie Animation during playback, such as substituting text programmatically? A: Not at this time.","title":"FAQ"},{"location":"governance/FAQ/#faq","text":"","title":"FAQ"},{"location":"governance/FAQ/#scope","text":"Q: Does the specification cover an API for manipulating Lottie Animation playback, such as setting the refresh rate? A: Not at this time. Q: Does the specification cover an API for changing a Lottie Animation during playback, such as substituting text programmatically? A: Not at this time.","title":"Scope"},{"location":"governance/Notices/","text":"Notices Community Specification Contributor License Agreement 1.0 By making a Contribution to this repository, I agree to the terms of the following documents located at https://github.com/CommunitySpecification/1.0 : (a) Community Specification License 1.0 (0._Community_Specification_License-v1.md) (b) Community Specification Governance Policy 1.0 (5._Governance.md) (c) Community Specification Contribution Policy 1.0 (6._Contributing.md) (d) Community Specification Code of Conduct (8._Code_of_Conduct.md) In addition, for source code contributions, I certify that: (a) The contribution was created in whole or in part by me and I have the right to submit it under the open source license indicated in the file; or (b) The contribution is based upon previous work that, to the best of my knowledge, is covered under an appropriate open source license and I have the right under that license to submit that work with modifications, whether created in whole or in part by me, under the same open source license (unless I am permitted to submit under a different license), as indicated in the file; or (c) The contribution was provided directly to me by some other person who certified (a), (b) or (c) and I have not modified it. (d) I understand and agree that this working group and the contribution may be public and that a record of the contribution (including all personal information I submit with it, including my sign-off) is maintained indefinitely and may be redistributed consistent with this agreement or the open source license(s) involved. I represent that I am legally entitled to make the grants set forth in the documents above. If my employer(s) has rights to intellectual property that may be infringed by the materials developed by this Working Group, I represent that I have received permission to enter these agreements on behalf of that employer. License Acceptance Licensee\u2019s name: Joseph Gregorio Authorized individual and system identifier: jcgregorio@google.com Specification version: 1.0 Licensee\u2019s name: Florin Malita Authorized individual and system identifier: fmalita@google.com Specification version: 1.0 Licensee\u2019s name: Hern\u00e1n Torrisi Authorized individual and system identifier: hernantorrisi@gmail.com Specification version: 1.0 Licensee\u2019s name: Mike Reed Authorized individual and system identifier: reed@google.com Specification version: 1.0 Licensee\u2019s name: Mattia Basaglia Authorized individual and system identifier: glax@dragon.best Specification version: 1.0 Licensee's name: Jorge Betancourt Authorized individual and system identifier: jmbetancourt@google.com Specification version: 1.0 Licensee's name: Jawish Hameed Authorized individual and system identifier: jawish@lottiefiles.com Specification version: 1.0 Licensee's name: Aidos Sabit Authorized individual and system identifier: aidosmf@gmail.com Specification version: 1.0 Licensee's name: Alistair Thomson Authorized individual and system identifier: alistair@lottielab.io Specification version: 1.0 Licensee's name: Marcus Stenbeck Authorized individual and system identifier: marcus.stenbeck@gmail.com Specification version: 1.0","title":"Notices"},{"location":"governance/Notices/#notices","text":"","title":"Notices"},{"location":"governance/Notices/#community-specification-contributor-license-agreement-10","text":"By making a Contribution to this repository, I agree to the terms of the following documents located at https://github.com/CommunitySpecification/1.0 : (a) Community Specification License 1.0 (0._Community_Specification_License-v1.md) (b) Community Specification Governance Policy 1.0 (5._Governance.md) (c) Community Specification Contribution Policy 1.0 (6._Contributing.md) (d) Community Specification Code of Conduct (8._Code_of_Conduct.md) In addition, for source code contributions, I certify that: (a) The contribution was created in whole or in part by me and I have the right to submit it under the open source license indicated in the file; or (b) The contribution is based upon previous work that, to the best of my knowledge, is covered under an appropriate open source license and I have the right under that license to submit that work with modifications, whether created in whole or in part by me, under the same open source license (unless I am permitted to submit under a different license), as indicated in the file; or (c) The contribution was provided directly to me by some other person who certified (a), (b) or (c) and I have not modified it. (d) I understand and agree that this working group and the contribution may be public and that a record of the contribution (including all personal information I submit with it, including my sign-off) is maintained indefinitely and may be redistributed consistent with this agreement or the open source license(s) involved. I represent that I am legally entitled to make the grants set forth in the documents above. If my employer(s) has rights to intellectual property that may be infringed by the materials developed by this Working Group, I represent that I have received permission to enter these agreements on behalf of that employer.","title":"Community Specification Contributor License Agreement 1.0"},{"location":"governance/Notices/#license-acceptance","text":"Licensee\u2019s name: Joseph Gregorio Authorized individual and system identifier: jcgregorio@google.com Specification version: 1.0 Licensee\u2019s name: Florin Malita Authorized individual and system identifier: fmalita@google.com Specification version: 1.0 Licensee\u2019s name: Hern\u00e1n Torrisi Authorized individual and system identifier: hernantorrisi@gmail.com Specification version: 1.0 Licensee\u2019s name: Mike Reed Authorized individual and system identifier: reed@google.com Specification version: 1.0 Licensee\u2019s name: Mattia Basaglia Authorized individual and system identifier: glax@dragon.best Specification version: 1.0 Licensee's name: Jorge Betancourt Authorized individual and system identifier: jmbetancourt@google.com Specification version: 1.0 Licensee's name: Jawish Hameed Authorized individual and system identifier: jawish@lottiefiles.com Specification version: 1.0 Licensee's name: Aidos Sabit Authorized individual and system identifier: aidosmf@gmail.com Specification version: 1.0 Licensee's name: Alistair Thomson Authorized individual and system identifier: alistair@lottielab.io Specification version: 1.0 Licensee's name: Marcus Stenbeck Authorized individual and system identifier: marcus.stenbeck@gmail.com Specification version: 1.0","title":"License Acceptance"},{"location":"specs/assets/","text":"Assets Asset Attribute Type Title Description nm string Name Human readable name id string ID Unique identifier used by layers when referencing this asset Precomposition Asset containing a composition that can be referenced by layers. Also has the attributes from Asset . Attribute Type Title Description layers array of Layer Layers Layers","title":"Assets"},{"location":"specs/assets/#assets","text":"","title":"Assets"},{"location":"specs/assets/#asset","text":"Attribute Type Title Description nm string Name Human readable name id string ID Unique identifier used by layers when referencing this asset","title":"Asset"},{"location":"specs/assets/#precomposition","text":"Asset containing a composition that can be referenced by layers. Also has the attributes from Asset . Attribute Type Title Description layers array of Layer Layers Layers","title":"Precomposition"},{"location":"specs/composition/","text":"Composition Animation Top level object, describing the animation Attribute Type Title Description layers array of Layer Layers Layers nm string Name Name, as seen from editors and the like fr number Framerate Framerate in frames per second ip number In Point Frame the animation starts at (usually 0) op number Out Point Frame the animation stops/loops at, which makes this the duration in frames when ip is 0 w integer Width Width of the animation h integer Height Height of the animation assets array of Asset Assets List of assets that can be referenced by layers markers array of Marker Markers Markers defining named sections of the composition. Composition An object that contains a list of layers Attribute Type Title Description nm string Name Name, as seen from editors and the like layers array of Layer Layers Layers","title":"Composition"},{"location":"specs/composition/#composition","text":"","title":"Composition"},{"location":"specs/composition/#animation","text":"Top level object, describing the animation Attribute Type Title Description layers array of Layer Layers Layers nm string Name Name, as seen from editors and the like fr number Framerate Framerate in frames per second ip number In Point Frame the animation starts at (usually 0) op number Out Point Frame the animation stops/loops at, which makes this the duration in frames when ip is 0 w integer Width Width of the animation h integer Height Height of the animation assets array of Asset Assets List of assets that can be referenced by layers markers array of Marker Markers Markers defining named sections of the composition.","title":"Animation"},{"location":"specs/composition/#composition_1","text":"An object that contains a list of layers Attribute Type Title Description nm string Name Name, as seen from editors and the like layers array of Layer Layers Layers","title":"Composition"},{"location":"specs/constants/","text":"Enumerations Fill Rule Rule used to handle multiple shapes rendered with the same fill object Value Name Description 1 Non Zero Everything is colored (You can think of this as an OR) 2 Even Odd Colored based on intersections and path direction, can be used to create \"holes\" Shape Direction Drawing direction of the shape curve, useful for trim path Value Name Description 1 Normal Usually clockwise 3 Reversed Usually counter clockwise Trim Multiple Shapes How to handle multiple shapes in trim path Value Name 1 Individually 2 Simultaneously","title":"Enumerations"},{"location":"specs/constants/#enumerations","text":"","title":"Enumerations"},{"location":"specs/constants/#fill-rule","text":"Rule used to handle multiple shapes rendered with the same fill object Value Name Description 1 Non Zero Everything is colored (You can think of this as an OR) 2 Even Odd Colored based on intersections and path direction, can be used to create \"holes\"","title":"Fill Rule"},{"location":"specs/constants/#shape-direction","text":"Drawing direction of the shape curve, useful for trim path Value Name Description 1 Normal Usually clockwise 3 Reversed Usually counter clockwise","title":"Shape Direction"},{"location":"specs/constants/#trim-multiple-shapes","text":"How to handle multiple shapes in trim path Value Name 1 Individually 2 Simultaneously","title":"Trim Multiple Shapes"},{"location":"specs/helpers/","text":"","title":"Helpers"},{"location":"specs/layers/","text":"","title":"Layers"},{"location":"specs/properties/","text":"","title":"Properties"},{"location":"specs/schema/","text":"JSON Schema This page shows a formatted version of the JSON schema, you can click on highlighted objects to get a link to that section of the schema. You can also click on $ref values to jump to the relevant section. If you want you can also view the raw schema file . { \"$schema\" : \"https://json-schema.org/draft/2020-12/schema\" , \"$id\" : \"https://github.com/lottie-animation-community/lottie-spec/schema/\" , \"$ref\" : \"#/$defs/composition/animation\" , \"$defs\" : { \"assets\" : { \"all-assets\" : { \"oneOf\" : [ { \"$ref\" : \"#/$defs/assets/precomposition\" } ] }, \"precomposition\" : { \"type\" : \"object\" , \"title\" : \"Precomposition\" , \"description\" : \"Asset containing a composition that can be referenced by layers.\" , \"allOf\" : [ { \"$ref\" : \"#/$defs/assets/asset\" }, { \"$ref\" : \"#/$defs/composition/composition\" } ] }, \"asset\" : { \"type\" : \"object\" , \"title\" : \"Asset\" , \"allOf\" : [ { \"type\" : \"object\" , \"properties\" : { \"id\" : { \"title\" : \"ID\" , \"description\" : \"Unique identifier used by layers when referencing this asset\" , \"type\" : \"string\" , \"default\" : \"\" }, \"nm\" : { \"title\" : \"Name\" , \"description\" : \"Human readable name\" , \"type\" : \"string\" } }, \"required\" : [ \"id\" ] } ] } }, \"composition\" : { \"composition\" : { \"type\" : \"object\" , \"title\" : \"Composition\" , \"description\" : \"An object that contains a list of layers\" , \"properties\" : { \"layers\" : { \"title\" : \"Layers\" , \"type\" : \"array\" , \"items\" : { \"$ref\" : \"#/$defs/layers/all-layers\" } } }, \"required\" : [ \"layers\" ] }, \"animation\" : { \"type\" : \"object\" , \"title\" : \"Animation\" , \"description\" : \"Top level object, describing the animation\" , \"allOf\" : [ { \"$ref\" : \"#/$defs/helpers/visual-object\" }, { \"type\" : \"object\" , \"properties\" : { \"fr\" : { \"title\" : \"Framerate\" , \"description\" : \"Framerate in frames per second\" , \"type\" : \"number\" }, \"ip\" : { \"title\" : \"In Point\" , \"description\" : \"Frame the animation starts at (usually 0)\" , \"type\" : \"number\" }, \"op\" : { \"title\" : \"Out Point\" , \"description\" : \"Frame the animation stops/loops at, which makes this the duration in frames when ip is 0\" , \"type\" : \"number\" }, \"w\" : { \"title\" : \"Width\" , \"description\" : \"Width of the animation\" , \"type\" : \"integer\" }, \"h\" : { \"title\" : \"Height\" , \"description\" : \"Height of the animation\" , \"type\" : \"integer\" }, \"assets\" : { \"title\" : \"Assets\" , \"type\" : \"array\" , \"description\" : \"List of assets that can be referenced by layers\" , \"items\" : { \"$ref\" : \"#/$defs/assets/all-assets\" } }, \"markers\" : { \"title\" : \"Markers\" , \"description\" : \"Markers defining named sections of the composition.\" , \"type\" : \"array\" , \"items\" : { \"$ref\" : \"#/$defs/helpers/marker\" } } }, \"required\" : [ \"w\" , \"h\" , \"fr\" , \"op\" , \"ip\" ] }, { \"$ref\" : \"#/$defs/composition/composition\" } ] } }, \"constants\" : { \"fill-rule\" : { \"type\" : \"integer\" , \"title\" : \"Fill Rule\" , \"description\" : \"Rule used to handle multiple shapes rendered with the same fill object\" , \"oneOf\" : [ { \"title\" : \"Non Zero\" , \"description\" : \"Everything is colored (You can think of this as an OR)\" , \"const\" : 1 }, { \"title\" : \"Even Odd\" , \"description\" : \"Colored based on intersections and path direction, can be used to create \\\"holes\\\"\" , \"const\" : 2 } ] }, \"shape-direction\" : { \"type\" : \"integer\" , \"title\" : \"Shape Direction\" , \"description\" : \"Drawing direction of the shape curve, useful for trim path\" , \"oneOf\" : [ { \"title\" : \"Normal\" , \"description\" : \"Usually clockwise\" , \"const\" : 1 }, { \"title\" : \"Reversed\" , \"description\" : \"Usually counter clockwise\" , \"const\" : 3 } ] }, \"trim-multiple-shapes\" : { \"type\" : \"integer\" , \"title\" : \"Trim Multiple Shapes\" , \"description\" : \"How to handle multiple shapes in trim path\" , \"oneOf\" : [ { \"title\" : \"Individually\" , \"const\" : 1 }, { \"title\" : \"Simultaneously\" , \"const\" : 2 } ] } }, \"helpers\" : { \"marker\" : { \"type\" : \"object\" , \"title\" : \"Marker\" , \"description\" : \"Defines named portions of the composition.\" , \"properties\" : { \"cm\" : { \"title\" : \"Comment\" , \"type\" : \"string\" }, \"tm\" : { \"title\" : \"Time\" , \"type\" : \"number\" }, \"dr\" : { \"title\" : \"Duration\" , \"type\" : \"number\" } } }, \"transform\" : { \"type\" : \"object\" , \"title\" : \"Transform\" , \"description\" : \"Layer transform\" , \"allOf\" : [ { \"properties\" : { \"a\" : { \"title\" : \"Anchor Point\" , \"description\" : \"Anchor point: a position (relative to its parent) around which transformations are applied (ie: center for rotation / scale)\" , \"$ref\" : \"#/$defs/properties/position\" }, \"p\" : { \"title\" : \"Position\" , \"description\" : \"Position / Translation\" , \"$ref\" : \"#/$defs/properties/position\" }, \"r\" : { \"title\" : \"Rotation\" , \"description\" : \"Rotation in degrees, clockwise\" , \"$ref\" : \"#/$defs/properties/value\" }, \"s\" : { \"title\" : \"Scale\" , \"description\" : \"Scale factor, [100, 100] for no scaling\" , \"$ref\" : \"#/$defs/properties/multi-dimensional\" }, \"o\" : { \"title\" : \"Opacity\" , \"$ref\" : \"#/$defs/properties/value\" }, \"sk\" : { \"title\" : \"Skew\" , \"description\" : \"Skew amount as an angle in degrees\" , \"$ref\" : \"#/$defs/properties/value\" }, \"sa\" : { \"title\" : \"Skew Axis\" , \"description\" : \"Direction along which skew is applied, in degrees ( 0 skews along the X axis, 90 along the Y axis)\" , \"$ref\" : \"#/$defs/properties/value\" } } } ] }, \"bezier\" : { \"type\" : \"object\" , \"title\" : \"Bezier\" , \"description\" : \"Cubic polybezier\" , \"properties\" : { \"c\" : { \"title\" : \"Closed\" , \"type\" : \"boolean\" , \"default\" : false }, \"i\" : { \"title\" : \"In Tangents\" , \"type\" : \"array\" , \"description\" : \"Array of points, each point is an array of coordinates.\\nThese points are along the in tangents relative to the corresponding v .\" , \"items\" : { \"type\" : \"array\" , \"items\" : { \"type\" : \"number\" , \"default\" : [] } } }, \"o\" : { \"title\" : \"Out Tangents\" , \"type\" : \"array\" , \"description\" : \"Array of points, each point is an array of coordinates.\\nThese points are along the out tangents relative to the corresponding v .\" , \"items\" : { \"type\" : \"array\" , \"items\" : { \"type\" : \"number\" , \"default\" : [] } } }, \"v\" : { \"title\" : \"Vertices\" , \"description\" : \"Array of points, each point is an array of coordinates.\\nThese points are along the bezier path\" , \"type\" : \"array\" , \"items\" : { \"type\" : \"array\" , \"items\" : { \"type\" : \"number\" , \"default\" : [] } } } }, \"required\" : [ \"i\" , \"v\" , \"o\" ] }, \"int-boolean\" : { \"type\" : \"integer\" , \"title\" : \"Integer Boolean\" , \"description\" : \"Represents boolean values as an integer. 0 is false, 1 is true.\" , \"default\" : 0 , \"examples\" : [ 0 ], \"enum\" : [ 0 , 1 ], \"oneOf\" : [ { \"title\" : \"True\" , \"const\" : 1 }, { \"title\" : \"False\" , \"const\" : 0 } ] }, \"color\" : { \"type\" : \"array\" , \"title\" : \"Color\" , \"description\" : \"Color as a [r, g, b] array with values in [0, 1]\" , \"items\" : { \"type\" : \"number\" , \"minimum\" : 0 , \"maximum\" : 1 }, \"minItems\" : 3 , \"maxItems\" : 4 }, \"visual-object\" : { \"type\" : \"object\" , \"title\" : \"Visual Object\" , \"description\" : \"\" , \"allOf\" : [ { \"type\" : \"object\" , \"properties\" : { \"nm\" : { \"title\" : \"Name\" , \"description\" : \"Name, as seen from editors and the like\" , \"type\" : \"string\" } }, \"required\" : [] } ] } }, \"layers\" : { \"shape-layer\" : { \"type\" : \"object\" , \"title\" : \"Shape Layer\" , \"description\" : \"Layer containing Shapes\" , \"allOf\" : [ { \"$ref\" : \"#/$defs/layers/visual-layer\" }, { \"type\" : \"object\" , \"properties\" : { \"ty\" : { \"title\" : \"Type\" , \"description\" : \"Layer type\" , \"type\" : \"integer\" , \"const\" : 4 }, \"shapes\" : { \"title\" : \"Shapes\" , \"type\" : \"array\" , \"items\" : { \"$ref\" : \"#/$defs/shapes/all-shapes\" } } }, \"required\" : [ \"ty\" , \"shapes\" ] } ] }, \"null-layer\" : { \"type\" : \"object\" , \"title\" : \"Null Layer\" , \"description\" : \"Layer with no data, useful to group layers together\" , \"allOf\" : [ { \"$ref\" : \"#/$defs/layers/visual-layer\" }, { \"type\" : \"object\" , \"properties\" : { \"ty\" : { \"title\" : \"Type\" , \"description\" : \"Layer type\" , \"type\" : \"integer\" , \"const\" : 3 } }, \"required\" : [ \"ty\" ] } ] }, \"visual-layer\" : { \"type\" : \"object\" , \"title\" : \"Visual Layer\" , \"description\" : \"Layer used to affect visual elements\" , \"allOf\" : [ { \"$ref\" : \"#/$defs/layers/layer\" }, { \"type\" : \"object\" , \"properties\" : { \"ks\" : { \"title\" : \"Transform\" , \"description\" : \"Layer transform\" , \"$ref\" : \"#/$defs/helpers/transform\" }, \"ao\" : { \"title\" : \"Auto Orient\" , \"$ref\" : \"#/$defs/helpers/int-boolean\" , \"default\" : 0 , \"description\" : \"If 1, The layer will rotate itself to match its animated position path\" } }, \"required\" : [ \"ks\" ] } ] }, \"layer\" : { \"type\" : \"object\" , \"title\" : \"Layer\" , \"description\" : \"\" , \"allOf\" : [ { \"$ref\" : \"#/$defs/helpers/visual-object\" }, { \"type\" : \"object\" , \"properties\" : { \"hd\" : { \"title\" : \"Hidden\" , \"description\" : \"Whether the layer is hidden\" , \"type\" : \"boolean\" }, \"ty\" : { \"title\" : \"Type\" , \"description\" : \"Layer Type\" , \"type\" : \"integer\" }, \"ind\" : { \"title\" : \"Index\" , \"type\" : \"integer\" , \"description\" : \"Index that can be used for parenting and referenced in expressions\" }, \"parent\" : { \"title\" : \"Parent Index\" , \"description\" : \"Must be the ind property of another layer\" , \"type\" : \"integer\" }, \"sr\" : { \"title\" : \"Time Stretch\" , \"type\" : \"number\" , \"default\" : 1 }, \"ip\" : { \"title\" : \"In Point\" , \"description\" : \"Frame when the layer becomes visible\" , \"type\" : \"number\" }, \"op\" : { \"title\" : \"Out Point\" , \"description\" : \"Frame when the layer becomes invisible\" , \"type\" : \"number\" }, \"st\" : { \"title\" : \"Start Time\" , \"type\" : \"number\" , \"default\" : 0 } }, \"required\" : [ \"ty\" , \"st\" , \"ip\" , \"op\" ] } ] }, \"precomposition-layer\" : { \"type\" : \"object\" , \"title\" : \"Precomposition Layer\" , \"description\" : \"Layer that renders a Precomposition asset\" , \"allOf\" : [ { \"$ref\" : \"#/$defs/layers/visual-layer\" }, { \"type\" : \"object\" , \"properties\" : { \"ty\" : { \"title\" : \"Type\" , \"description\" : \"Layer type\" , \"type\" : \"integer\" , \"const\" : 0 }, \"refId\" : { \"title\" : \"Reference Id\" , \"description\" : \"ID of the precomp as specified in the assets\" , \"type\" : \"string\" }, \"w\" : { \"title\" : \"Width\" , \"description\" : \"Width of the clipping rect\" , \"type\" : \"integer\" }, \"h\" : { \"title\" : \"Height\" , \"description\" : \"Height of the clipping rect\" , \"type\" : \"integer\" } }, \"required\" : [ \"ty\" , \"refId\" ] } ] }, \"all-layers\" : { \"oneOf\" : [ { \"$ref\" : \"#/$defs/layers/precomposition-layer\" }, { \"$ref\" : \"#/$defs/layers/null-layer\" }, { \"$ref\" : \"#/$defs/layers/shape-layer\" } ] } }, \"properties\" : { \"color-value\" : { \"type\" : \"object\" , \"title\" : \"Color Value\" , \"description\" : \"An animatable property that holds a Color\" , \"oneOf\" : [ { \"$comment\" : \"Not animated\" , \"properties\" : { \"a\" : { \"title\" : \"Animated\" , \"description\" : \"Whether the property is animated\" , \"$ref\" : \"#/$defs/helpers/int-boolean\" , \"const\" : 0 }, \"k\" : { \"title\" : \"Static value\" , \"$ref\" : \"#/$defs/helpers/color\" } } }, { \"$comment\" : \"Animated\" , \"properties\" : { \"a\" : { \"title\" : \"Animated\" , \"description\" : \"Whether the property is animated\" , \"$ref\" : \"#/$defs/helpers/int-boolean\" , \"const\" : 1 }, \"k\" : { \"type\" : \"array\" , \"title\" : \"Keyframes\" , \"description\" : \"Array of keyframes\" , \"items\" : { \"$ref\" : \"#/$defs/properties/color-keyframe\" } } } } ], \"required\" : [ \"a\" , \"k\" ] }, \"multi-dimensional\" : { \"type\" : \"object\" , \"title\" : \"Multi Dimensional\" , \"description\" : \"An animatable property that holds an array of numbers\" , \"oneOf\" : [ { \"$comment\" : \"Not animated\" , \"properties\" : { \"a\" : { \"title\" : \"Animated\" , \"description\" : \"Whether the property is animated\" , \"$ref\" : \"#/$defs/helpers/int-boolean\" , \"const\" : 0 }, \"k\" : { \"title\" : \"Static value\" , \"type\" : \"array\" , \"items\" : { \"type\" : \"number\" } } } }, { \"$comment\" : \"Animated\" , \"properties\" : { \"a\" : { \"title\" : \"Animated\" , \"description\" : \"Whether the property is animated\" , \"$ref\" : \"#/$defs/helpers/int-boolean\" , \"const\" : 1 }, \"k\" : { \"type\" : \"array\" , \"title\" : \"Keyframes\" , \"description\" : \"Array of keyframes\" , \"items\" : { \"$ref\" : \"#/$defs/properties/vector-keyframe\" } } } } ], \"required\" : [ \"a\" , \"k\" ] }, \"vector-keyframe\" : { \"type\" : \"object\" , \"title\" : \"Vector Keyframe\" , \"allOf\" : [ { \"$ref\" : \"#/$defs/properties/base-keyframe\" }, { \"properties\" : { \"s\" : { \"title\" : \"Value\" , \"description\" : \"Value at this keyframe.\" , \"type\" : \"array\" , \"items\" : { \"type\" : \"number\" } } } } ], \"required\" : [ \"s\" ] }, \"color-keyframe\" : { \"type\" : \"object\" , \"title\" : \"Color Keyframe\" , \"allOf\" : [ { \"$ref\" : \"#/$defs/properties/base-keyframe\" }, { \"properties\" : { \"s\" : { \"title\" : \"Value\" , \"description\" : \"Value at this keyframe.\" , \"$ref\" : \"#/$defs/helpers/color\" } } } ], \"required\" : [ \"s\" ] }, \"position\" : { \"type\" : \"object\" , \"title\" : \"Position Property\" , \"description\" : \"An animatable property to represent a position in space\" , \"oneOf\" : [ { \"$comment\" : \"Not animated\" , \"properties\" : { \"a\" : { \"title\" : \"Animated\" , \"description\" : \"Whether the property is animated\" , \"$ref\" : \"#/$defs/helpers/int-boolean\" , \"const\" : 0 }, \"k\" : { \"title\" : \"Static value\" , \"type\" : \"array\" , \"items\" : { \"type\" : \"number\" } } } }, { \"$comment\" : \"Animated\" , \"properties\" : { \"a\" : { \"title\" : \"Animated\" , \"description\" : \"Whether the property is animated\" , \"$ref\" : \"#/$defs/helpers/int-boolean\" , \"const\" : 1 }, \"k\" : { \"type\" : \"array\" , \"title\" : \"Keyframes\" , \"description\" : \"Array of keyframes\" , \"items\" : { \"$ref\" : \"#/$defs/properties/position-keyframe\" } } } } ], \"required\" : [ \"a\" , \"k\" ] }, \"base-keyframe\" : { \"type\" : \"object\" , \"title\" : \"Base Keyframe\" , \"description\" : \"A Keyframes specifies the value at a specific time and the interpolation function to reach the next keyframe.\" , \"allOf\" : [ { \"properties\" : { \"t\" : { \"title\" : \"Time\" , \"description\" : \"Frame number\" , \"type\" : \"number\" , \"default\" : 0 }, \"h\" : { \"title\" : \"Hold\" , \"$ref\" : \"#/$defs/helpers/int-boolean\" , \"default\" : 0 } } }, { \"if\" : { \"oneOf\" : [ { \"properties\" : { \"h\" : { \"const\" : 0 } } }, { \"not\" : { \"required\" : [ \"h\" ] } } ] }, \"then\" : { \"properties\" : { \"i\" : { \"title\" : \"In Tangent\" , \"description\" : \"Easing tangent going into the next keyframe\" , \"$ref\" : \"#/$defs/properties/easing-handle\" }, \"o\" : { \"title\" : \"Out Tangent\" , \"description\" : \"Easing tangent leaving the current keyframe\" , \"$ref\" : \"#/$defs/properties/easing-handle\" } } } } ], \"required\" : [ \"t\" ] }, \"shape-property\" : { \"type\" : \"object\" , \"title\" : \"Shape Property\" , \"description\" : \"An animatable property that holds a Bezier shape\" , \"oneOf\" : [ { \"$comment\" : \"Not animated\" , \"properties\" : { \"a\" : { \"title\" : \"Animated\" , \"description\" : \"Whether the property is animated\" , \"$ref\" : \"#/$defs/helpers/int-boolean\" , \"const\" : 0 }, \"k\" : { \"title\" : \"Static value\" , \"$ref\" : \"#/$defs/helpers/bezier\" } } }, { \"$comment\" : \"Animated\" , \"properties\" : { \"a\" : { \"title\" : \"Animated\" , \"description\" : \"Whether the property is animated\" , \"$ref\" : \"#/$defs/helpers/int-boolean\" , \"const\" : 1 }, \"k\" : { \"type\" : \"array\" , \"title\" : \"Keyframes\" , \"description\" : \"Array of keyframes\" , \"items\" : { \"$ref\" : \"#/$defs/properties/shape-keyframe\" } } } } ], \"required\" : [ \"a\" , \"k\" ] }, \"easing-handle\" : { \"type\" : \"object\" , \"title\" : \"Keyframe Easing\" , \"description\" : \"Bezier handle for keyframe interpolation\" , \"properties\" : { \"x\" : { \"title\" : \"X\" , \"description\" : \"Time component:\\n0 means start time of the keyframe,\\n1 means time of the next keyframe.\" , \"oneOf\" : [ { \"type\" : \"array\" , \"items\" : { \"type\" : \"number\" , \"default\" : 0 , \"minimum\" : 0 , \"maximum\" : 1 }, \"minItems\" : 1 }, { \"type\" : \"number\" , \"default\" : 0 , \"minimum\" : 0 , \"maximum\" : 1 } ] }, \"y\" : { \"title\" : \"Y\" , \"description\" : \"Value interpolation component:\\n0 means start value of the keyframe,\\n1 means value at the next keyframe.\" , \"oneOf\" : [ { \"type\" : \"array\" , \"items\" : { \"type\" : \"number\" , \"default\" : 0 , \"minimum\" : 0 , \"maximum\" : 1 }, \"minItems\" : 1 }, { \"type\" : \"number\" , \"default\" : 0 , \"minimum\" : 0 , \"maximum\" : 1 } ] } }, \"required\" : [ \"x\" , \"y\" ] }, \"position-keyframe\" : { \"type\" : \"object\" , \"title\" : \"Position Keyframe\" , \"allOf\" : [ { \"$ref\" : \"#/$defs/properties/vector-keyframe\" }, { \"properties\" : { \"ti\" : { \"title\" : \"Value In Tangent\" , \"description\" : \"Tangent for values (eg: moving position around a curved path)\" , \"type\" : \"array\" , \"items\" : { \"type\" : \"number\" } }, \"to\" : { \"title\" : \"Value Out Tangent\" , \"description\" : \"Tangent for values (eg: moving position around a curved path)\" , \"type\" : \"array\" , \"items\" : { \"type\" : \"number\" } } } } ] }, \"shape-keyframe\" : { \"type\" : \"object\" , \"title\" : \"Shape Keyframe\" , \"allOf\" : [ { \"$ref\" : \"#/$defs/properties/base-keyframe\" }, { \"properties\" : { \"s\" : { \"title\" : \"Value\" , \"description\" : \"Value at this keyframe.\" , \"$ref\" : \"#/$defs/helpers/bezier\" } } } ], \"required\" : [ \"s\" ] }, \"value\" : { \"type\" : \"object\" , \"title\" : \"Value\" , \"description\" : \"An animatable property that holds a float\" , \"oneOf\" : [ { \"$comment\" : \"Not animated\" , \"properties\" : { \"a\" : { \"title\" : \"Animated\" , \"description\" : \"Whether the property is animated\" , \"$ref\" : \"#/$defs/helpers/int-boolean\" , \"const\" : 0 }, \"k\" : { \"title\" : \"Static value\" , \"type\" : \"number\" } } }, { \"$comment\" : \"Animated\" , \"properties\" : { \"a\" : { \"title\" : \"Animated\" , \"description\" : \"Whether the property is animated\" , \"$ref\" : \"#/$defs/helpers/int-boolean\" , \"const\" : 1 }, \"k\" : { \"type\" : \"array\" , \"title\" : \"Keyframes\" , \"description\" : \"Array of keyframes\" , \"items\" : { \"$ref\" : \"#/$defs/properties/vector-keyframe\" } } } } ], \"required\" : [ \"a\" , \"k\" ] } }, \"shapes\" : { \"shape-element\" : { \"type\" : \"object\" , \"title\" : \"Shape Element\" , \"description\" : \"Base class for all elements of ShapeLayer and Group\" , \"allOf\" : [ { \"$ref\" : \"#/$defs/helpers/visual-object\" }, { \"type\" : \"object\" , \"properties\" : { \"hd\" : { \"title\" : \"Hidden\" , \"description\" : \"Whether the shape is hidden\" , \"type\" : \"boolean\" }, \"ty\" : { \"title\" : \"Shape Type\" , \"type\" : \"string\" } }, \"required\" : [ \"ty\" ] } ] }, \"shape\" : { \"type\" : \"object\" , \"title\" : \"Shape\" , \"description\" : \"Drawable shape\" , \"allOf\" : [ { \"$ref\" : \"#/$defs/shapes/shape-element\" }, { \"type\" : \"object\" , \"properties\" : { \"d\" : { \"title\" : \"Direction\" , \"description\" : \"Direction the shape is drawn as, mostly relevant when using trim path\" , \"$ref\" : \"#/$defs/constants/shape-direction\" } } } ] }, \"ellipse\" : { \"type\" : \"object\" , \"title\" : \"Ellipse\" , \"description\" : \"Ellipse shape\" , \"allOf\" : [ { \"$ref\" : \"#/$defs/shapes/shape\" }, { \"type\" : \"object\" , \"properties\" : { \"ty\" : { \"title\" : \"Shape Type\" , \"type\" : \"string\" , \"const\" : \"el\" }, \"p\" : { \"title\" : \"Position\" , \"$ref\" : \"#/$defs/properties/position\" }, \"s\" : { \"title\" : \"Size\" , \"$ref\" : \"#/$defs/properties/multi-dimensional\" } }, \"required\" : [ \"ty\" , \"s\" , \"p\" ] } ] }, \"group\" : { \"type\" : \"object\" , \"title\" : \"Group\" , \"description\" : \"Shape Element that can contain other shapes\" , \"allOf\" : [ { \"$ref\" : \"#/$defs/shapes/shape-element\" }, { \"type\" : \"object\" , \"properties\" : { \"ty\" : { \"title\" : \"Shape Type\" , \"type\" : \"string\" , \"const\" : \"gr\" }, \"np\" : { \"title\" : \"Number Of Properties\" , \"type\" : \"number\" }, \"it\" : { \"title\" : \"Shapes\" , \"type\" : \"array\" , \"items\" : { \"$ref\" : \"#/$defs/shapes/all-shapes\" } } }, \"required\" : [ \"ty\" ] } ] }, \"all-shapes\" : { \"$comment\" : \"List of valid shapes\" , \"oneOf\" : [ { \"$ref\" : \"#/$defs/shapes/ellipse\" }, { \"$ref\" : \"#/$defs/shapes/fill\" }, { \"$ref\" : \"#/$defs/shapes/group\" }, { \"$ref\" : \"#/$defs/shapes/path\" }, { \"$ref\" : \"#/$defs/shapes/rectangle\" }, { \"$ref\" : \"#/$defs/shapes/transform\" }, { \"$ref\" : \"#/$defs/shapes/trim-path\" } ] }, \"trim-path\" : { \"type\" : \"object\" , \"title\" : \"Trim Path\" , \"description\" : \"Trims shapes into a segment\" , \"allOf\" : [ { \"$ref\" : \"#/$defs/shapes/modifier\" }, { \"type\" : \"object\" , \"properties\" : { \"ty\" : { \"title\" : \"Shape Type\" , \"type\" : \"string\" , \"const\" : \"tm\" }, \"s\" : { \"title\" : \"Start\" , \"description\" : \"Segment start\" , \"$ref\" : \"#/$defs/properties/value\" }, \"e\" : { \"title\" : \"End\" , \"description\" : \"Segment end\" , \"$ref\" : \"#/$defs/properties/value\" }, \"o\" : { \"title\" : \"Offset\" , \"$ref\" : \"#/$defs/properties/value\" }, \"m\" : { \"title\" : \"Multiple\" , \"description\" : \"How to treat multiple copies\" , \"$ref\" : \"#/$defs/constants/trim-multiple-shapes\" } }, \"required\" : [ \"ty\" , \"o\" , \"s\" , \"e\" ] } ] }, \"rectangle\" : { \"type\" : \"object\" , \"title\" : \"Rectangle\" , \"description\" : \"A simple rectangle shape\" , \"allOf\" : [ { \"$ref\" : \"#/$defs/shapes/shape\" }, { \"type\" : \"object\" , \"properties\" : { \"ty\" : { \"title\" : \"Shape Type\" , \"type\" : \"string\" , \"const\" : \"rc\" }, \"p\" : { \"title\" : \"Position\" , \"description\" : \"Center of the rectangle\" , \"$ref\" : \"#/$defs/properties/position\" }, \"s\" : { \"title\" : \"Size\" , \"$ref\" : \"#/$defs/properties/multi-dimensional\" }, \"r\" : { \"title\" : \"Rounded\" , \"description\" : \"Rounded corners radius\" , \"$ref\" : \"#/$defs/properties/value\" } }, \"required\" : [ \"ty\" , \"s\" , \"p\" ] } ] }, \"transform\" : { \"type\" : \"object\" , \"title\" : \"Transform Shape\" , \"description\" : \"Group transform\" , \"allOf\" : [ { \"$ref\" : \"#/$defs/shapes/shape-element\" }, { \"$ref\" : \"#/$defs/helpers/transform\" }, { \"type\" : \"object\" , \"properties\" : { \"ty\" : { \"title\" : \"Shape Type\" , \"type\" : \"string\" , \"const\" : \"tr\" } }, \"required\" : [ \"ty\" ] } ] }, \"path\" : { \"type\" : \"object\" , \"title\" : \"Path\" , \"description\" : \"Animatable Bezier curve\" , \"allOf\" : [ { \"$ref\" : \"#/$defs/shapes/shape\" }, { \"type\" : \"object\" , \"properties\" : { \"ty\" : { \"title\" : \"Shape Type\" , \"type\" : \"string\" , \"const\" : \"sh\" }, \"ks\" : { \"title\" : \"Shape\" , \"description\" : \"Bezier path\" , \"$ref\" : \"#/$defs/properties/shape-property\" } }, \"required\" : [ \"ty\" , \"ks\" ] } ] }, \"fill\" : { \"type\" : \"object\" , \"title\" : \"Fill\" , \"description\" : \"Solid fill color\" , \"allOf\" : [ { \"$ref\" : \"#/$defs/shapes/shape-style\" }, { \"type\" : \"object\" , \"properties\" : { \"ty\" : { \"title\" : \"Shape Type\" , \"type\" : \"string\" , \"const\" : \"fl\" }, \"c\" : { \"title\" : \"Color\" , \"$ref\" : \"#/$defs/properties/color-value\" }, \"r\" : { \"title\" : \"Fill Rule\" , \"$ref\" : \"#/$defs/constants/fill-rule\" } }, \"required\" : [ \"ty\" , \"c\" ] } ] }, \"modifier\" : { \"type\" : \"object\" , \"title\" : \"Modifier\" , \"allOf\" : [ { \"$ref\" : \"#/$defs/shapes/shape-element\" } ] }, \"shape-style\" : { \"type\" : \"object\" , \"title\" : \"Shape Style\" , \"allOf\" : [ { \"$ref\" : \"#/$defs/shapes/shape-element\" }, { \"type\" : \"object\" , \"properties\" : { \"o\" : { \"title\" : \"Opacity\" , \"description\" : \"Opacity, 100 means fully opaque\" , \"$ref\" : \"#/$defs/properties/value\" } }, \"required\" : [ \"o\" ] } ] } } } }","title":"JSON Schema"},{"location":"specs/schema/#json-schema","text":"This page shows a formatted version of the JSON schema, you can click on highlighted objects to get a link to that section of the schema. You can also click on $ref values to jump to the relevant section. If you want you can also view the raw schema file . { \"$schema\" : \"https://json-schema.org/draft/2020-12/schema\" , \"$id\" : \"https://github.com/lottie-animation-community/lottie-spec/schema/\" , \"$ref\" : \"#/$defs/composition/animation\" , \"$defs\" : { \"assets\" : { \"all-assets\" : { \"oneOf\" : [ { \"$ref\" : \"#/$defs/assets/precomposition\" } ] }, \"precomposition\" : { \"type\" : \"object\" , \"title\" : \"Precomposition\" , \"description\" : \"Asset containing a composition that can be referenced by layers.\" , \"allOf\" : [ { \"$ref\" : \"#/$defs/assets/asset\" }, { \"$ref\" : \"#/$defs/composition/composition\" } ] }, \"asset\" : { \"type\" : \"object\" , \"title\" : \"Asset\" , \"allOf\" : [ { \"type\" : \"object\" , \"properties\" : { \"id\" : { \"title\" : \"ID\" , \"description\" : \"Unique identifier used by layers when referencing this asset\" , \"type\" : \"string\" , \"default\" : \"\" }, \"nm\" : { \"title\" : \"Name\" , \"description\" : \"Human readable name\" , \"type\" : \"string\" } }, \"required\" : [ \"id\" ] } ] } }, \"composition\" : { \"composition\" : { \"type\" : \"object\" , \"title\" : \"Composition\" , \"description\" : \"An object that contains a list of layers\" , \"properties\" : { \"layers\" : { \"title\" : \"Layers\" , \"type\" : \"array\" , \"items\" : { \"$ref\" : \"#/$defs/layers/all-layers\" } } }, \"required\" : [ \"layers\" ] }, \"animation\" : { \"type\" : \"object\" , \"title\" : \"Animation\" , \"description\" : \"Top level object, describing the animation\" , \"allOf\" : [ { \"$ref\" : \"#/$defs/helpers/visual-object\" }, { \"type\" : \"object\" , \"properties\" : { \"fr\" : { \"title\" : \"Framerate\" , \"description\" : \"Framerate in frames per second\" , \"type\" : \"number\" }, \"ip\" : { \"title\" : \"In Point\" , \"description\" : \"Frame the animation starts at (usually 0)\" , \"type\" : \"number\" }, \"op\" : { \"title\" : \"Out Point\" , \"description\" : \"Frame the animation stops/loops at, which makes this the duration in frames when ip is 0\" , \"type\" : \"number\" }, \"w\" : { \"title\" : \"Width\" , \"description\" : \"Width of the animation\" , \"type\" : \"integer\" }, \"h\" : { \"title\" : \"Height\" , \"description\" : \"Height of the animation\" , \"type\" : \"integer\" }, \"assets\" : { \"title\" : \"Assets\" , \"type\" : \"array\" , \"description\" : \"List of assets that can be referenced by layers\" , \"items\" : { \"$ref\" : \"#/$defs/assets/all-assets\" } }, \"markers\" : { \"title\" : \"Markers\" , \"description\" : \"Markers defining named sections of the composition.\" , \"type\" : \"array\" , \"items\" : { \"$ref\" : \"#/$defs/helpers/marker\" } } }, \"required\" : [ \"w\" , \"h\" , \"fr\" , \"op\" , \"ip\" ] }, { \"$ref\" : \"#/$defs/composition/composition\" } ] } }, \"constants\" : { \"fill-rule\" : { \"type\" : \"integer\" , \"title\" : \"Fill Rule\" , \"description\" : \"Rule used to handle multiple shapes rendered with the same fill object\" , \"oneOf\" : [ { \"title\" : \"Non Zero\" , \"description\" : \"Everything is colored (You can think of this as an OR)\" , \"const\" : 1 }, { \"title\" : \"Even Odd\" , \"description\" : \"Colored based on intersections and path direction, can be used to create \\\"holes\\\"\" , \"const\" : 2 } ] }, \"shape-direction\" : { \"type\" : \"integer\" , \"title\" : \"Shape Direction\" , \"description\" : \"Drawing direction of the shape curve, useful for trim path\" , \"oneOf\" : [ { \"title\" : \"Normal\" , \"description\" : \"Usually clockwise\" , \"const\" : 1 }, { \"title\" : \"Reversed\" , \"description\" : \"Usually counter clockwise\" , \"const\" : 3 } ] }, \"trim-multiple-shapes\" : { \"type\" : \"integer\" , \"title\" : \"Trim Multiple Shapes\" , \"description\" : \"How to handle multiple shapes in trim path\" , \"oneOf\" : [ { \"title\" : \"Individually\" , \"const\" : 1 }, { \"title\" : \"Simultaneously\" , \"const\" : 2 } ] } }, \"helpers\" : { \"marker\" : { \"type\" : \"object\" , \"title\" : \"Marker\" , \"description\" : \"Defines named portions of the composition.\" , \"properties\" : { \"cm\" : { \"title\" : \"Comment\" , \"type\" : \"string\" }, \"tm\" : { \"title\" : \"Time\" , \"type\" : \"number\" }, \"dr\" : { \"title\" : \"Duration\" , \"type\" : \"number\" } } }, \"transform\" : { \"type\" : \"object\" , \"title\" : \"Transform\" , \"description\" : \"Layer transform\" , \"allOf\" : [ { \"properties\" : { \"a\" : { \"title\" : \"Anchor Point\" , \"description\" : \"Anchor point: a position (relative to its parent) around which transformations are applied (ie: center for rotation / scale)\" , \"$ref\" : \"#/$defs/properties/position\" }, \"p\" : { \"title\" : \"Position\" , \"description\" : \"Position / Translation\" , \"$ref\" : \"#/$defs/properties/position\" }, \"r\" : { \"title\" : \"Rotation\" , \"description\" : \"Rotation in degrees, clockwise\" , \"$ref\" : \"#/$defs/properties/value\" }, \"s\" : { \"title\" : \"Scale\" , \"description\" : \"Scale factor, [100, 100] for no scaling\" , \"$ref\" : \"#/$defs/properties/multi-dimensional\" }, \"o\" : { \"title\" : \"Opacity\" , \"$ref\" : \"#/$defs/properties/value\" }, \"sk\" : { \"title\" : \"Skew\" , \"description\" : \"Skew amount as an angle in degrees\" , \"$ref\" : \"#/$defs/properties/value\" }, \"sa\" : { \"title\" : \"Skew Axis\" , \"description\" : \"Direction along which skew is applied, in degrees ( 0 skews along the X axis, 90 along the Y axis)\" , \"$ref\" : \"#/$defs/properties/value\" } } } ] }, \"bezier\" : { \"type\" : \"object\" , \"title\" : \"Bezier\" , \"description\" : \"Cubic polybezier\" , \"properties\" : { \"c\" : { \"title\" : \"Closed\" , \"type\" : \"boolean\" , \"default\" : false }, \"i\" : { \"title\" : \"In Tangents\" , \"type\" : \"array\" , \"description\" : \"Array of points, each point is an array of coordinates.\\nThese points are along the in tangents relative to the corresponding v .\" , \"items\" : { \"type\" : \"array\" , \"items\" : { \"type\" : \"number\" , \"default\" : [] } } }, \"o\" : { \"title\" : \"Out Tangents\" , \"type\" : \"array\" , \"description\" : \"Array of points, each point is an array of coordinates.\\nThese points are along the out tangents relative to the corresponding v .\" , \"items\" : { \"type\" : \"array\" , \"items\" : { \"type\" : \"number\" , \"default\" : [] } } }, \"v\" : { \"title\" : \"Vertices\" , \"description\" : \"Array of points, each point is an array of coordinates.\\nThese points are along the bezier path\" , \"type\" : \"array\" , \"items\" : { \"type\" : \"array\" , \"items\" : { \"type\" : \"number\" , \"default\" : [] } } } }, \"required\" : [ \"i\" , \"v\" , \"o\" ] }, \"int-boolean\" : { \"type\" : \"integer\" , \"title\" : \"Integer Boolean\" , \"description\" : \"Represents boolean values as an integer. 0 is false, 1 is true.\" , \"default\" : 0 , \"examples\" : [ 0 ], \"enum\" : [ 0 , 1 ], \"oneOf\" : [ { \"title\" : \"True\" , \"const\" : 1 }, { \"title\" : \"False\" , \"const\" : 0 } ] }, \"color\" : { \"type\" : \"array\" , \"title\" : \"Color\" , \"description\" : \"Color as a [r, g, b] array with values in [0, 1]\" , \"items\" : { \"type\" : \"number\" , \"minimum\" : 0 , \"maximum\" : 1 }, \"minItems\" : 3 , \"maxItems\" : 4 }, \"visual-object\" : { \"type\" : \"object\" , \"title\" : \"Visual Object\" , \"description\" : \"\" , \"allOf\" : [ { \"type\" : \"object\" , \"properties\" : { \"nm\" : { \"title\" : \"Name\" , \"description\" : \"Name, as seen from editors and the like\" , \"type\" : \"string\" } }, \"required\" : [] } ] } }, \"layers\" : { \"shape-layer\" : { \"type\" : \"object\" , \"title\" : \"Shape Layer\" , \"description\" : \"Layer containing Shapes\" , \"allOf\" : [ { \"$ref\" : \"#/$defs/layers/visual-layer\" }, { \"type\" : \"object\" , \"properties\" : { \"ty\" : { \"title\" : \"Type\" , \"description\" : \"Layer type\" , \"type\" : \"integer\" , \"const\" : 4 }, \"shapes\" : { \"title\" : \"Shapes\" , \"type\" : \"array\" , \"items\" : { \"$ref\" : \"#/$defs/shapes/all-shapes\" } } }, \"required\" : [ \"ty\" , \"shapes\" ] } ] }, \"null-layer\" : { \"type\" : \"object\" , \"title\" : \"Null Layer\" , \"description\" : \"Layer with no data, useful to group layers together\" , \"allOf\" : [ { \"$ref\" : \"#/$defs/layers/visual-layer\" }, { \"type\" : \"object\" , \"properties\" : { \"ty\" : { \"title\" : \"Type\" , \"description\" : \"Layer type\" , \"type\" : \"integer\" , \"const\" : 3 } }, \"required\" : [ \"ty\" ] } ] }, \"visual-layer\" : { \"type\" : \"object\" , \"title\" : \"Visual Layer\" , \"description\" : \"Layer used to affect visual elements\" , \"allOf\" : [ { \"$ref\" : \"#/$defs/layers/layer\" }, { \"type\" : \"object\" , \"properties\" : { \"ks\" : { \"title\" : \"Transform\" , \"description\" : \"Layer transform\" , \"$ref\" : \"#/$defs/helpers/transform\" }, \"ao\" : { \"title\" : \"Auto Orient\" , \"$ref\" : \"#/$defs/helpers/int-boolean\" , \"default\" : 0 , \"description\" : \"If 1, The layer will rotate itself to match its animated position path\" } }, \"required\" : [ \"ks\" ] } ] }, \"layer\" : { \"type\" : \"object\" , \"title\" : \"Layer\" , \"description\" : \"\" , \"allOf\" : [ { \"$ref\" : \"#/$defs/helpers/visual-object\" }, { \"type\" : \"object\" , \"properties\" : { \"hd\" : { \"title\" : \"Hidden\" , \"description\" : \"Whether the layer is hidden\" , \"type\" : \"boolean\" }, \"ty\" : { \"title\" : \"Type\" , \"description\" : \"Layer Type\" , \"type\" : \"integer\" }, \"ind\" : { \"title\" : \"Index\" , \"type\" : \"integer\" , \"description\" : \"Index that can be used for parenting and referenced in expressions\" }, \"parent\" : { \"title\" : \"Parent Index\" , \"description\" : \"Must be the ind property of another layer\" , \"type\" : \"integer\" }, \"sr\" : { \"title\" : \"Time Stretch\" , \"type\" : \"number\" , \"default\" : 1 }, \"ip\" : { \"title\" : \"In Point\" , \"description\" : \"Frame when the layer becomes visible\" , \"type\" : \"number\" }, \"op\" : { \"title\" : \"Out Point\" , \"description\" : \"Frame when the layer becomes invisible\" , \"type\" : \"number\" }, \"st\" : { \"title\" : \"Start Time\" , \"type\" : \"number\" , \"default\" : 0 } }, \"required\" : [ \"ty\" , \"st\" , \"ip\" , \"op\" ] } ] }, \"precomposition-layer\" : { \"type\" : \"object\" , \"title\" : \"Precomposition Layer\" , \"description\" : \"Layer that renders a Precomposition asset\" , \"allOf\" : [ { \"$ref\" : \"#/$defs/layers/visual-layer\" }, { \"type\" : \"object\" , \"properties\" : { \"ty\" : { \"title\" : \"Type\" , \"description\" : \"Layer type\" , \"type\" : \"integer\" , \"const\" : 0 }, \"refId\" : { \"title\" : \"Reference Id\" , \"description\" : \"ID of the precomp as specified in the assets\" , \"type\" : \"string\" }, \"w\" : { \"title\" : \"Width\" , \"description\" : \"Width of the clipping rect\" , \"type\" : \"integer\" }, \"h\" : { \"title\" : \"Height\" , \"description\" : \"Height of the clipping rect\" , \"type\" : \"integer\" } }, \"required\" : [ \"ty\" , \"refId\" ] } ] }, \"all-layers\" : { \"oneOf\" : [ { \"$ref\" : \"#/$defs/layers/precomposition-layer\" }, { \"$ref\" : \"#/$defs/layers/null-layer\" }, { \"$ref\" : \"#/$defs/layers/shape-layer\" } ] } }, \"properties\" : { \"color-value\" : { \"type\" : \"object\" , \"title\" : \"Color Value\" , \"description\" : \"An animatable property that holds a Color\" , \"oneOf\" : [ { \"$comment\" : \"Not animated\" , \"properties\" : { \"a\" : { \"title\" : \"Animated\" , \"description\" : \"Whether the property is animated\" , \"$ref\" : \"#/$defs/helpers/int-boolean\" , \"const\" : 0 }, \"k\" : { \"title\" : \"Static value\" , \"$ref\" : \"#/$defs/helpers/color\" } } }, { \"$comment\" : \"Animated\" , \"properties\" : { \"a\" : { \"title\" : \"Animated\" , \"description\" : \"Whether the property is animated\" , \"$ref\" : \"#/$defs/helpers/int-boolean\" , \"const\" : 1 }, \"k\" : { \"type\" : \"array\" , \"title\" : \"Keyframes\" , \"description\" : \"Array of keyframes\" , \"items\" : { \"$ref\" : \"#/$defs/properties/color-keyframe\" } } } } ], \"required\" : [ \"a\" , \"k\" ] }, \"multi-dimensional\" : { \"type\" : \"object\" , \"title\" : \"Multi Dimensional\" , \"description\" : \"An animatable property that holds an array of numbers\" , \"oneOf\" : [ { \"$comment\" : \"Not animated\" , \"properties\" : { \"a\" : { \"title\" : \"Animated\" , \"description\" : \"Whether the property is animated\" , \"$ref\" : \"#/$defs/helpers/int-boolean\" , \"const\" : 0 }, \"k\" : { \"title\" : \"Static value\" , \"type\" : \"array\" , \"items\" : { \"type\" : \"number\" } } } }, { \"$comment\" : \"Animated\" , \"properties\" : { \"a\" : { \"title\" : \"Animated\" , \"description\" : \"Whether the property is animated\" , \"$ref\" : \"#/$defs/helpers/int-boolean\" , \"const\" : 1 }, \"k\" : { \"type\" : \"array\" , \"title\" : \"Keyframes\" , \"description\" : \"Array of keyframes\" , \"items\" : { \"$ref\" : \"#/$defs/properties/vector-keyframe\" } } } } ], \"required\" : [ \"a\" , \"k\" ] }, \"vector-keyframe\" : { \"type\" : \"object\" , \"title\" : \"Vector Keyframe\" , \"allOf\" : [ { \"$ref\" : \"#/$defs/properties/base-keyframe\" }, { \"properties\" : { \"s\" : { \"title\" : \"Value\" , \"description\" : \"Value at this keyframe.\" , \"type\" : \"array\" , \"items\" : { \"type\" : \"number\" } } } } ], \"required\" : [ \"s\" ] }, \"color-keyframe\" : { \"type\" : \"object\" , \"title\" : \"Color Keyframe\" , \"allOf\" : [ { \"$ref\" : \"#/$defs/properties/base-keyframe\" }, { \"properties\" : { \"s\" : { \"title\" : \"Value\" , \"description\" : \"Value at this keyframe.\" , \"$ref\" : \"#/$defs/helpers/color\" } } } ], \"required\" : [ \"s\" ] }, \"position\" : { \"type\" : \"object\" , \"title\" : \"Position Property\" , \"description\" : \"An animatable property to represent a position in space\" , \"oneOf\" : [ { \"$comment\" : \"Not animated\" , \"properties\" : { \"a\" : { \"title\" : \"Animated\" , \"description\" : \"Whether the property is animated\" , \"$ref\" : \"#/$defs/helpers/int-boolean\" , \"const\" : 0 }, \"k\" : { \"title\" : \"Static value\" , \"type\" : \"array\" , \"items\" : { \"type\" : \"number\" } } } }, { \"$comment\" : \"Animated\" , \"properties\" : { \"a\" : { \"title\" : \"Animated\" , \"description\" : \"Whether the property is animated\" , \"$ref\" : \"#/$defs/helpers/int-boolean\" , \"const\" : 1 }, \"k\" : { \"type\" : \"array\" , \"title\" : \"Keyframes\" , \"description\" : \"Array of keyframes\" , \"items\" : { \"$ref\" : \"#/$defs/properties/position-keyframe\" } } } } ], \"required\" : [ \"a\" , \"k\" ] }, \"base-keyframe\" : { \"type\" : \"object\" , \"title\" : \"Base Keyframe\" , \"description\" : \"A Keyframes specifies the value at a specific time and the interpolation function to reach the next keyframe.\" , \"allOf\" : [ { \"properties\" : { \"t\" : { \"title\" : \"Time\" , \"description\" : \"Frame number\" , \"type\" : \"number\" , \"default\" : 0 }, \"h\" : { \"title\" : \"Hold\" , \"$ref\" : \"#/$defs/helpers/int-boolean\" , \"default\" : 0 } } }, { \"if\" : { \"oneOf\" : [ { \"properties\" : { \"h\" : { \"const\" : 0 } } }, { \"not\" : { \"required\" : [ \"h\" ] } } ] }, \"then\" : { \"properties\" : { \"i\" : { \"title\" : \"In Tangent\" , \"description\" : \"Easing tangent going into the next keyframe\" , \"$ref\" : \"#/$defs/properties/easing-handle\" }, \"o\" : { \"title\" : \"Out Tangent\" , \"description\" : \"Easing tangent leaving the current keyframe\" , \"$ref\" : \"#/$defs/properties/easing-handle\" } } } } ], \"required\" : [ \"t\" ] }, \"shape-property\" : { \"type\" : \"object\" , \"title\" : \"Shape Property\" , \"description\" : \"An animatable property that holds a Bezier shape\" , \"oneOf\" : [ { \"$comment\" : \"Not animated\" , \"properties\" : { \"a\" : { \"title\" : \"Animated\" , \"description\" : \"Whether the property is animated\" , \"$ref\" : \"#/$defs/helpers/int-boolean\" , \"const\" : 0 }, \"k\" : { \"title\" : \"Static value\" , \"$ref\" : \"#/$defs/helpers/bezier\" } } }, { \"$comment\" : \"Animated\" , \"properties\" : { \"a\" : { \"title\" : \"Animated\" , \"description\" : \"Whether the property is animated\" , \"$ref\" : \"#/$defs/helpers/int-boolean\" , \"const\" : 1 }, \"k\" : { \"type\" : \"array\" , \"title\" : \"Keyframes\" , \"description\" : \"Array of keyframes\" , \"items\" : { \"$ref\" : \"#/$defs/properties/shape-keyframe\" } } } } ], \"required\" : [ \"a\" , \"k\" ] }, \"easing-handle\" : { \"type\" : \"object\" , \"title\" : \"Keyframe Easing\" , \"description\" : \"Bezier handle for keyframe interpolation\" , \"properties\" : { \"x\" : { \"title\" : \"X\" , \"description\" : \"Time component:\\n0 means start time of the keyframe,\\n1 means time of the next keyframe.\" , \"oneOf\" : [ { \"type\" : \"array\" , \"items\" : { \"type\" : \"number\" , \"default\" : 0 , \"minimum\" : 0 , \"maximum\" : 1 }, \"minItems\" : 1 }, { \"type\" : \"number\" , \"default\" : 0 , \"minimum\" : 0 , \"maximum\" : 1 } ] }, \"y\" : { \"title\" : \"Y\" , \"description\" : \"Value interpolation component:\\n0 means start value of the keyframe,\\n1 means value at the next keyframe.\" , \"oneOf\" : [ { \"type\" : \"array\" , \"items\" : { \"type\" : \"number\" , \"default\" : 0 , \"minimum\" : 0 , \"maximum\" : 1 }, \"minItems\" : 1 }, { \"type\" : \"number\" , \"default\" : 0 , \"minimum\" : 0 , \"maximum\" : 1 } ] } }, \"required\" : [ \"x\" , \"y\" ] }, \"position-keyframe\" : { \"type\" : \"object\" , \"title\" : \"Position Keyframe\" , \"allOf\" : [ { \"$ref\" : \"#/$defs/properties/vector-keyframe\" }, { \"properties\" : { \"ti\" : { \"title\" : \"Value In Tangent\" , \"description\" : \"Tangent for values (eg: moving position around a curved path)\" , \"type\" : \"array\" , \"items\" : { \"type\" : \"number\" } }, \"to\" : { \"title\" : \"Value Out Tangent\" , \"description\" : \"Tangent for values (eg: moving position around a curved path)\" , \"type\" : \"array\" , \"items\" : { \"type\" : \"number\" } } } } ] }, \"shape-keyframe\" : { \"type\" : \"object\" , \"title\" : \"Shape Keyframe\" , \"allOf\" : [ { \"$ref\" : \"#/$defs/properties/base-keyframe\" }, { \"properties\" : { \"s\" : { \"title\" : \"Value\" , \"description\" : \"Value at this keyframe.\" , \"$ref\" : \"#/$defs/helpers/bezier\" } } } ], \"required\" : [ \"s\" ] }, \"value\" : { \"type\" : \"object\" , \"title\" : \"Value\" , \"description\" : \"An animatable property that holds a float\" , \"oneOf\" : [ { \"$comment\" : \"Not animated\" , \"properties\" : { \"a\" : { \"title\" : \"Animated\" , \"description\" : \"Whether the property is animated\" , \"$ref\" : \"#/$defs/helpers/int-boolean\" , \"const\" : 0 }, \"k\" : { \"title\" : \"Static value\" , \"type\" : \"number\" } } }, { \"$comment\" : \"Animated\" , \"properties\" : { \"a\" : { \"title\" : \"Animated\" , \"description\" : \"Whether the property is animated\" , \"$ref\" : \"#/$defs/helpers/int-boolean\" , \"const\" : 1 }, \"k\" : { \"type\" : \"array\" , \"title\" : \"Keyframes\" , \"description\" : \"Array of keyframes\" , \"items\" : { \"$ref\" : \"#/$defs/properties/vector-keyframe\" } } } } ], \"required\" : [ \"a\" , \"k\" ] } }, \"shapes\" : { \"shape-element\" : { \"type\" : \"object\" , \"title\" : \"Shape Element\" , \"description\" : \"Base class for all elements of ShapeLayer and Group\" , \"allOf\" : [ { \"$ref\" : \"#/$defs/helpers/visual-object\" }, { \"type\" : \"object\" , \"properties\" : { \"hd\" : { \"title\" : \"Hidden\" , \"description\" : \"Whether the shape is hidden\" , \"type\" : \"boolean\" }, \"ty\" : { \"title\" : \"Shape Type\" , \"type\" : \"string\" } }, \"required\" : [ \"ty\" ] } ] }, \"shape\" : { \"type\" : \"object\" , \"title\" : \"Shape\" , \"description\" : \"Drawable shape\" , \"allOf\" : [ { \"$ref\" : \"#/$defs/shapes/shape-element\" }, { \"type\" : \"object\" , \"properties\" : { \"d\" : { \"title\" : \"Direction\" , \"description\" : \"Direction the shape is drawn as, mostly relevant when using trim path\" , \"$ref\" : \"#/$defs/constants/shape-direction\" } } } ] }, \"ellipse\" : { \"type\" : \"object\" , \"title\" : \"Ellipse\" , \"description\" : \"Ellipse shape\" , \"allOf\" : [ { \"$ref\" : \"#/$defs/shapes/shape\" }, { \"type\" : \"object\" , \"properties\" : { \"ty\" : { \"title\" : \"Shape Type\" , \"type\" : \"string\" , \"const\" : \"el\" }, \"p\" : { \"title\" : \"Position\" , \"$ref\" : \"#/$defs/properties/position\" }, \"s\" : { \"title\" : \"Size\" , \"$ref\" : \"#/$defs/properties/multi-dimensional\" } }, \"required\" : [ \"ty\" , \"s\" , \"p\" ] } ] }, \"group\" : { \"type\" : \"object\" , \"title\" : \"Group\" , \"description\" : \"Shape Element that can contain other shapes\" , \"allOf\" : [ { \"$ref\" : \"#/$defs/shapes/shape-element\" }, { \"type\" : \"object\" , \"properties\" : { \"ty\" : { \"title\" : \"Shape Type\" , \"type\" : \"string\" , \"const\" : \"gr\" }, \"np\" : { \"title\" : \"Number Of Properties\" , \"type\" : \"number\" }, \"it\" : { \"title\" : \"Shapes\" , \"type\" : \"array\" , \"items\" : { \"$ref\" : \"#/$defs/shapes/all-shapes\" } } }, \"required\" : [ \"ty\" ] } ] }, \"all-shapes\" : { \"$comment\" : \"List of valid shapes\" , \"oneOf\" : [ { \"$ref\" : \"#/$defs/shapes/ellipse\" }, { \"$ref\" : \"#/$defs/shapes/fill\" }, { \"$ref\" : \"#/$defs/shapes/group\" }, { \"$ref\" : \"#/$defs/shapes/path\" }, { \"$ref\" : \"#/$defs/shapes/rectangle\" }, { \"$ref\" : \"#/$defs/shapes/transform\" }, { \"$ref\" : \"#/$defs/shapes/trim-path\" } ] }, \"trim-path\" : { \"type\" : \"object\" , \"title\" : \"Trim Path\" , \"description\" : \"Trims shapes into a segment\" , \"allOf\" : [ { \"$ref\" : \"#/$defs/shapes/modifier\" }, { \"type\" : \"object\" , \"properties\" : { \"ty\" : { \"title\" : \"Shape Type\" , \"type\" : \"string\" , \"const\" : \"tm\" }, \"s\" : { \"title\" : \"Start\" , \"description\" : \"Segment start\" , \"$ref\" : \"#/$defs/properties/value\" }, \"e\" : { \"title\" : \"End\" , \"description\" : \"Segment end\" , \"$ref\" : \"#/$defs/properties/value\" }, \"o\" : { \"title\" : \"Offset\" , \"$ref\" : \"#/$defs/properties/value\" }, \"m\" : { \"title\" : \"Multiple\" , \"description\" : \"How to treat multiple copies\" , \"$ref\" : \"#/$defs/constants/trim-multiple-shapes\" } }, \"required\" : [ \"ty\" , \"o\" , \"s\" , \"e\" ] } ] }, \"rectangle\" : { \"type\" : \"object\" , \"title\" : \"Rectangle\" , \"description\" : \"A simple rectangle shape\" , \"allOf\" : [ { \"$ref\" : \"#/$defs/shapes/shape\" }, { \"type\" : \"object\" , \"properties\" : { \"ty\" : { \"title\" : \"Shape Type\" , \"type\" : \"string\" , \"const\" : \"rc\" }, \"p\" : { \"title\" : \"Position\" , \"description\" : \"Center of the rectangle\" , \"$ref\" : \"#/$defs/properties/position\" }, \"s\" : { \"title\" : \"Size\" , \"$ref\" : \"#/$defs/properties/multi-dimensional\" }, \"r\" : { \"title\" : \"Rounded\" , \"description\" : \"Rounded corners radius\" , \"$ref\" : \"#/$defs/properties/value\" } }, \"required\" : [ \"ty\" , \"s\" , \"p\" ] } ] }, \"transform\" : { \"type\" : \"object\" , \"title\" : \"Transform Shape\" , \"description\" : \"Group transform\" , \"allOf\" : [ { \"$ref\" : \"#/$defs/shapes/shape-element\" }, { \"$ref\" : \"#/$defs/helpers/transform\" }, { \"type\" : \"object\" , \"properties\" : { \"ty\" : { \"title\" : \"Shape Type\" , \"type\" : \"string\" , \"const\" : \"tr\" } }, \"required\" : [ \"ty\" ] } ] }, \"path\" : { \"type\" : \"object\" , \"title\" : \"Path\" , \"description\" : \"Animatable Bezier curve\" , \"allOf\" : [ { \"$ref\" : \"#/$defs/shapes/shape\" }, { \"type\" : \"object\" , \"properties\" : { \"ty\" : { \"title\" : \"Shape Type\" , \"type\" : \"string\" , \"const\" : \"sh\" }, \"ks\" : { \"title\" : \"Shape\" , \"description\" : \"Bezier path\" , \"$ref\" : \"#/$defs/properties/shape-property\" } }, \"required\" : [ \"ty\" , \"ks\" ] } ] }, \"fill\" : { \"type\" : \"object\" , \"title\" : \"Fill\" , \"description\" : \"Solid fill color\" , \"allOf\" : [ { \"$ref\" : \"#/$defs/shapes/shape-style\" }, { \"type\" : \"object\" , \"properties\" : { \"ty\" : { \"title\" : \"Shape Type\" , \"type\" : \"string\" , \"const\" : \"fl\" }, \"c\" : { \"title\" : \"Color\" , \"$ref\" : \"#/$defs/properties/color-value\" }, \"r\" : { \"title\" : \"Fill Rule\" , \"$ref\" : \"#/$defs/constants/fill-rule\" } }, \"required\" : [ \"ty\" , \"c\" ] } ] }, \"modifier\" : { \"type\" : \"object\" , \"title\" : \"Modifier\" , \"allOf\" : [ { \"$ref\" : \"#/$defs/shapes/shape-element\" } ] }, \"shape-style\" : { \"type\" : \"object\" , \"title\" : \"Shape Style\" , \"allOf\" : [ { \"$ref\" : \"#/$defs/shapes/shape-element\" }, { \"type\" : \"object\" , \"properties\" : { \"o\" : { \"title\" : \"Opacity\" , \"description\" : \"Opacity, 100 means fully opaque\" , \"$ref\" : \"#/$defs/properties/value\" } }, \"required\" : [ \"o\" ] } ] } } } }","title":"JSON Schema"},{"location":"specs/shapes/","text":"","title":"Shapes"}]}